# TODO: Enable these analytic function tests once the KLL_QUANTILES
# functions are implemented in the reference implementation.  These tests must
# be removed from the reference implementation known errors.  The output results
# from these test must be updated once these queries can actually run.
[default required_features=ANALYTIC_FUNCTIONS]
[name=analytic_kll_quantiles_init_int64_basic]
SELECT KLL_QUANTILES.INIT_INT64(x, 2) OVER () AS kll_quantiles_init_int64
FROM UNNEST([1, 1, 1, 1, 1]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_init_uint64_basic]
SELECT KLL_QUANTILES.INIT_UINT64(x, 2) OVER () AS kll_quantiles_init_uint64
FROM UNNEST([CAST(1 AS UINT64), 1, 1, 1, 1]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_init_double_basic]
SELECT KLL_QUANTILES.INIT_DOUBLE(x, 2) OVER () AS kll_quantiles_init_double
FROM UNNEST([1.0, 1.0, 1.0, 1.0, 1.0]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_partial_basic]
SELECT KLL_QUANTILES.MERGE_PARTIAL(x) OVER () AS kll_quantiles_merge_partial
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_int64_basic]
SELECT KLL_QUANTILES.MERGE_INT64(x, 2) OVER () AS kll_quantiles_merge_int64
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_uint64_basic]
SELECT KLL_QUANTILES.MERGE_UINT64(x, 2) OVER () AS kll_quantiles_merge_uint64
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_double_basic]
SELECT KLL_QUANTILES.MERGE_DOUBLE(x, 2) OVER () AS kll_quantiles_merge_double
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_point_int64_basic]
SELECT KLL_QUANTILES.MERGE_POINT_INT64(x, 2.0) OVER ()
    AS kll_quantiles_merge_point_int64
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_point_uint64_basic]
SELECT KLL_QUANTILES.MERGE_POINT_UINT64(x, 2.0) OVER ()
    AS kll_quantiles_merge_point_uint64
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
==

[name=analytic_kll_quantiles_merge_point_double_basic]
SELECT KLL_QUANTILES.MERGE_POINT_DOUBLE(x, 2.0) OVER ()
    AS kll_quantiles_merge_point_double
FROM UNNEST([CAST(NULL AS BYTES)]) x;
--
<update the test output>
