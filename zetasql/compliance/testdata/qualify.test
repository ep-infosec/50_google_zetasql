[default required_features=ANALYTIC_FUNCTIONS,V_1_3_QUALIFY]
[prepare_database]
CREATE TABLE t1 AS
  SELECT * FROM UNNEST([
    STRUCT(1 AS i, 'A' AS p, 1 AS o),
    STRUCT(2 AS i, 'A' AS p, 2 AS o),
    STRUCT(3 AS i, 'A' AS p, 3 AS o),
    STRUCT(4 AS i, 'B' AS p, 1 AS o),
    STRUCT(5 AS i, 'B' AS p, 2 AS o),
    STRUCT(6 AS i, 'B' AS p, 3 AS o)
    ]);
--
ARRAY<STRUCT<i INT64, p STRING, o INT64>>[
  {2, "A", 2},
  {4, "B", 1},
  {6, "B", 3},
  {1, "A", 1},
  {3, "A", 3},
  {5, "B", 2}
]
==

[name=qualify]
SELECT i, p, o FROM t1
  WHERE true
  QUALIFY ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) = 1;
--
ARRAY<STRUCT<i INT64, p STRING, o INT64>>[{4, "B", 1}, {1, "A", 1}]
==

[name=qualify_analytic_function_in_select_list]
SELECT i, p, o, ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) as row_num FROM t1
  WHERE true
  QUALIFY row_num = 1;
--
ARRAY<STRUCT<i INT64, p STRING, o INT64, row_num INT64>>[
  {4, "B", 1, 1},
  {1, "A", 1, 1}
]
==

[name=qualify_with_analytic_and_column_filter]
SELECT i, p, o, ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) as row_num FROM t1
  WHERE true
  QUALIFY p NOT LIKE 'B' and row_num = 1;
--
ARRAY<STRUCT<i INT64, p STRING, o INT64, row_num INT64>>[{1, "A", 1, 1}]
==

# Regression test for b/189237442
[name=qualify_analytic_function_expression_in_select_list]
SELECT i, p, o, (ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) + 100) as row_num FROM t1
  WHERE true
  QUALIFY p NOT LIKE 'B' and row_num = 101;
--
ARRAY<STRUCT<i INT64, p STRING, o INT64, row_num INT64>>[{1, "A", 1, 101}]
==

[name=qualify_aggregate_with_analytic_filter]
SELECT SUM(i) as sum_i, ROW_NUMBER() OVER (ORDER BY o) as row_num FROM t1
GROUP BY o
QUALIFY row_num = 2;
--
ARRAY<STRUCT<sum_i INT64, row_num INT64>>[{7, 2}]
==

[name=qualify_aggregate_with_aggregate_filter]
SELECT SUM(i) as sum_i, ROW_NUMBER() OVER (ORDER BY o) as row_num FROM t1
GROUP BY o
QUALIFY sum_i < 6
--
ARRAY<STRUCT<sum_i INT64, row_num INT64>>[{5, 1}]
==

[name=qualify_sum_over_unbounded_preceding]
SELECT o
FROM t1
GROUP BY o
QUALIFY SUM(SUM(i)) OVER (ORDER BY o ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) > 5;
--
ARRAY<STRUCT<o INT64>>[{2}, {3}]
==

[name=qualify_group_by_and_alias]
SELECT o, SUM(i), ROW_NUMBER() OVER (ORDER BY o) as x
FROM t1
GROUP BY o
QUALIFY x > 1;
--
ARRAY<STRUCT<o INT64, INT64, x INT64>>[{2, 7, 2}, {3, 9, 3}]
==

[name=qualify_group_by]
SELECT o
FROM t1
GROUP BY o
QUALIFY RANK() OVER (ORDER BY SUM(i)) > 1;
--
ARRAY<STRUCT<o INT64>>[{2}, {3}]
==

[name=qualify_aggregation_and_analytic_in_both_select_and_qualify]
SELECT o, MIN(i), ROW_NUMBER() OVER (ORDER BY o)
FROM t1
GROUP BY o
QUALIFY MAX(i) > 4 AND SUM(SUM(i)) OVER (ORDER BY o ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) > 12
--
ARRAY<STRUCT<o INT64, INT64, INT64>>[{3, 3, 3}]
