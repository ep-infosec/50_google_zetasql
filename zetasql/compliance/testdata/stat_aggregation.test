[prepare_database]
CREATE TABLE TableEmpty AS
SELECT row_id, y, x FROM (SELECT 0 as row_id, 0.0 as y, 0.0 as x) WHERE false
--
ARRAY<STRUCT<row_id INT64, y DOUBLE, x DOUBLE>>[]
==

[prepare_database]
CREATE TABLE TableNulls AS
SELECT 1 as row_id, CAST(NULL as float64) as x UNION ALL
SELECT 2 as row_id, CAST(NULL as float64) as x
--
ARRAY<STRUCT<row_id INT64, x DOUBLE>>[{1, NULL}, {2, NULL}]
==

[prepare_database]
CREATE TABLE TableOneValue AS SELECT 0 as row_id, 1.0 as x
--
ARRAY<STRUCT<row_id INT64, x DOUBLE>>[{0, 1}]
==

[prepare_database]
CREATE TABLE TableOneNonNullValue AS
SELECT 1 as row_id, CAST(NULL as float64) as x UNION ALL
SELECT 2,           1.0                        UNION ALL
SELECT 3,           CAST(NULL as float64)
--
ARRAY<STRUCT<row_id INT64, x DOUBLE>>[{1, NULL}, {2, 1}, {3, NULL}]
==

[prepare_database]
CREATE TABLE TableSameValues AS
SELECT 1 as row_id, 1.0 x UNION ALL
SELECT 2,           1.0   UNION ALL
SELECT 3,           1.0   UNION ALL
SELECT 4,           1.0   UNION ALL
SELECT 5,           1.0
--
ARRAY<STRUCT<row_id INT64, x DOUBLE>>[{1, 1}, {2, 1}, {3, 1}, {4, 1}, {5, 1}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericEmpty AS
SELECT row_id, y, x FROM (SELECT 0 as row_id, CAST(0 AS NUMERIC) as y, CAST(0 AS NUMERIC) as x) WHERE false
--
ARRAY<STRUCT<row_id INT64, y NUMERIC, x NUMERIC>>[]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericNulls AS
SELECT 1 as row_id, CAST(NULL as NUMERIC) as x UNION ALL
SELECT 2 as row_id, CAST(NULL as NUMERIC) as x
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{1, NULL}, {2, NULL}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericOneValue AS SELECT 0 as row_id, CAST(1 AS NUMERIC) as x
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{0, 1}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericOneNonNullValue AS
SELECT 1 as row_id, CAST(NULL as NUMERIC) as x UNION ALL
SELECT 2,           CAST(1 AS NUMERIC)         UNION ALL
SELECT 3,           CAST(NULL as NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{1, NULL}, {2, 1}, {3, NULL}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericSameValues AS
SELECT 1 as row_id, CAST(1 AS NUMERIC) as x UNION ALL
SELECT 2,           CAST(1 AS NUMERIC)      UNION ALL
SELECT 3,           CAST(1 AS NUMERIC)      UNION ALL
SELECT 4,           CAST(1 AS NUMERIC)      UNION ALL
SELECT 5,           CAST(1 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{1, 1}, {2, 1}, {3, 1}, {4, 1}, {5, 1}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericSameColumn AS
SELECT 1 as row_id, CAST(1 AS NUMERIC) as x UNION ALL
SELECT 2,           CAST(2 AS NUMERIC)      UNION ALL
SELECT 3,           CAST(3 AS NUMERIC)      UNION ALL
SELECT 4,           CAST(4 AS NUMERIC)      UNION ALL
SELECT 5,           CAST(5 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{1, 1}, {2, 2}, {3, 3}, {4, 4}, {5, 5}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericAllValuesStddevSamp AS
SELECT CAST(1 as int64) as row_id, CAST(2 AS NUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS NUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(0 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(2 AS NUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(0 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[{1, 2}, {2, 1}, {3, 0}, {4, 2}, {5, 0}]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericAllValuesStddevPop AS
SELECT CAST(1 as int64) as row_id, CAST(4 AS NUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(-2 AS NUMERIC)     UNION ALL
SELECT CAST(3 as int64)          , CAST(2 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(0 AS NUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(1 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[
  {1, 4},
  {2, -2},
  {3, 2},
  {4, 0},
  {5, 1}
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericAllValuesVar AS
SELECT CAST(1 as int64) as row_id, CAST(1.1 AS NUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(2.2 AS NUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(3.3 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(-4.4 AS NUMERIC)     UNION ALL
SELECT CAST(5 as int64)          , CAST(-5.5 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[
  {1, 1.1},
  {2, 2.2},
  {3, 3.3},
  {4, -4.4},
  {5, -5.5}
]
==


[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericHighPrecValues AS
SELECT CAST(1 as int64) as row_id, CAST("1000000000000000000000000.1" AS NUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST("1000000000000000000000000.2" AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC>>[
  {
    1,
    1000000000000000000000000.1
  },
  {
    2,
    1000000000000000000000000.2
  }
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericAllValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(1.1 AS NUMERIC) as x, CAST(2.2 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(2.2 AS NUMERIC)     , CAST(4.4 AS NUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(3.3 AS NUMERIC)     , CAST(3.3 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(-4.4 AS NUMERIC)    , CAST(-1.1 AS NUMERIC)    UNION ALL
SELECT CAST(5 as int64)          , CAST(-5.5 AS NUMERIC)    , CAST(5.5 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[
  {1, 1.1, 2.2},
  {2, 2.2, 4.4},
  {3, 3.3, 3.3},
  {4, -4.4, -1.1},
  {5, -5.5, 5.5}
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericAllValuesWithNullBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(2 AS NUMERIC) as x, CAST(4 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS NUMERIC)     , CAST(-2 AS NUMERIC)     UNION ALL
SELECT CAST(3 as int64)          , CAST(0 AS NUMERIC)     , CAST(2 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(2 AS NUMERIC)     , CAST(0 AS NUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(0 AS NUMERIC)     , CAST(1 AS NUMERIC)      UNION ALL
SELECT CAST(6 as int64)          , CAST(0 AS NUMERIC)     , CAST(NULL AS NUMERIC)   UNION ALL
SELECT CAST(7 as int64)          , CAST(NULL AS NUMERIC)  , CAST(1 AS NUMERIC)   UNION ALL
SELECT CAST(8 as int64)          , CAST(0 AS NUMERIC)     , CAST(NULL AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[
  {1, 2, 4},
  {2, 1, -2},
  {3, 0, 2},
  {4, 2, 0},
  {5, 0, 1},
  {6, 0, NULL},
  {7, NULL, 1},
  {8, 0, NULL}
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericBigValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS NUMERIC)              as x, CAST(9.9999999e+28 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(-9.9999999e+28 AS NUMERIC)     , CAST(0 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[
  {
    1,
    0,
    99999999000000000000000000000
  },
  {
    2,
    -99999999000000000000000000000,
    0
  }
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericSmallValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS NUMERIC)     as x, CAST(1e-9 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(-1e-9 AS NUMERIC)     , CAST(0 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[
  {1, 0, 0.000000001},
  {2, -0.000000001, 0}
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericZeroCorrelation AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS NUMERIC) as x, CAST(0 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64) as row_id, CAST(1 AS NUMERIC) as x, CAST(2 AS NUMERIC)      UNION ALL
SELECT CAST(3 as int64) as row_id, CAST(2 AS NUMERIC) as x, CAST(0 AS NUMERIC)      UNION ALL
SELECT CAST(4 as int64) as row_id, CAST(3 AS NUMERIC) as x, CAST(2 AS NUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(4 AS NUMERIC)     , CAST(0 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[
  {1, 0, 0},
  {2, 1, 2},
  {3, 2, 0},
  {4, 3, 2},
  {5, 4, 0}
]
==

[required_features=NUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableNumericNanCorrelation AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS NUMERIC) as x, CAST(2 AS NUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS NUMERIC)     , CAST(2 AS NUMERIC)
--
ARRAY<STRUCT<row_id INT64, x NUMERIC, y NUMERIC>>[{1, 0, 2}, {2, 1, 2}]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericEmpty AS
SELECT row_id, y, x FROM (SELECT 0 as row_id, CAST(0 AS BIGNUMERIC) as y, CAST(0 AS BIGNUMERIC) as x) WHERE false
--
ARRAY<STRUCT<row_id INT64, y BIGNUMERIC, x BIGNUMERIC>>[]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericNulls AS
SELECT 1 as row_id, CAST(NULL as BIGNUMERIC) as x UNION ALL
SELECT 2 as row_id, CAST(NULL as BIGNUMERIC) as x
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[{1, NULL}, {2, NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericOneValue AS SELECT 0 as row_id, CAST(1 AS BIGNUMERIC) as x
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[{0, 1}]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericOneNonNullValue AS
SELECT 1 as row_id, CAST(NULL as BIGNUMERIC) as x UNION ALL
SELECT 2,           CAST(1 AS BIGNUMERIC)         UNION ALL
SELECT 3,           CAST(NULL as BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[{1, NULL}, {2, 1}, {3, NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericSameValues AS
SELECT 1 as row_id, CAST(1 AS BIGNUMERIC) as x UNION ALL
SELECT 2,           CAST(1 AS BIGNUMERIC)      UNION ALL
SELECT 3,           CAST(1 AS BIGNUMERIC)      UNION ALL
SELECT 4,           CAST(1 AS BIGNUMERIC)      UNION ALL
SELECT 5,           CAST(1 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 1},
  {2, 1},
  {3, 1},
  {4, 1},
  {5, 1}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericSameColumn AS
SELECT 1 as row_id, CAST(1 AS BIGNUMERIC) as x UNION ALL
SELECT 2,           CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT 3,           CAST(3 AS BIGNUMERIC)      UNION ALL
SELECT 4,           CAST(4 AS BIGNUMERIC)      UNION ALL
SELECT 5,           CAST(5 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 1},
  {2, 2},
  {3, 3},
  {4, 4},
  {5, 5}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericAllValuesStddevSamp AS
SELECT CAST(1 as int64) as row_id, CAST(2 AS BIGNUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS BIGNUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(0 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(0 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 2},
  {2, 1},
  {3, 0},
  {4, 2},
  {5, 0}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericAllValuesStddevPop AS
SELECT CAST(1 as int64) as row_id, CAST(4 AS BIGNUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(-2 AS BIGNUMERIC)     UNION ALL
SELECT CAST(3 as int64)          , CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(0 AS BIGNUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(1 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 4},
  {2, -2},
  {3, 2},
  {4, 0},
  {5, 1}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericAllValuesVar AS
SELECT CAST(1 as int64) as row_id, CAST(1.1 AS BIGNUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST(2.2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(3.3 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(-4.4 AS BIGNUMERIC)     UNION ALL
SELECT CAST(5 as int64)          , CAST(-5.5 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 1.1},
  {2, 2.2},
  {3, 3.3},
  {4, -4.4},
  {5, -5.5}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericHighPrecValues AS
SELECT CAST(1 as int64) as row_id, CAST("1.0000000000000001" AS BIGNUMERIC) as x UNION ALL
SELECT CAST(2 as int64)          , CAST("1.00000000000000001" AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC>>[
  {1, 1.0000000000000001},
  {2, 1.00000000000000001}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericAllValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(1.1 AS BIGNUMERIC) as x, CAST(2.2 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(2.2 AS BIGNUMERIC)     , CAST(4.4 AS BIGNUMERIC)      UNION ALL
SELECT CAST(3 as int64)          , CAST(3.3 AS BIGNUMERIC)     , CAST(3.3 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(-4.4 AS BIGNUMERIC)    , CAST(-1.1 AS BIGNUMERIC)    UNION ALL
SELECT CAST(5 as int64)          , CAST(-5.5 AS BIGNUMERIC)    , CAST(5.5 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[
  {1, 1.1, 2.2},
  {2, 2.2, 4.4},
  {3, 3.3, 3.3},
  {4, -4.4, -1.1},
  {5, -5.5, 5.5}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericAllValuesWithNullBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(2 AS BIGNUMERIC) as x, CAST(4 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS BIGNUMERIC)     , CAST(-2 AS BIGNUMERIC)     UNION ALL
SELECT CAST(3 as int64)          , CAST(0 AS BIGNUMERIC)     , CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64)          , CAST(2 AS BIGNUMERIC)     , CAST(0 AS BIGNUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(0 AS BIGNUMERIC)     , CAST(1 AS BIGNUMERIC)      UNION ALL
SELECT CAST(6 as int64)          , CAST(0 AS BIGNUMERIC)     , CAST(NULL AS BIGNUMERIC)   UNION ALL
SELECT CAST(7 as int64)          , CAST(NULL AS BIGNUMERIC)  , CAST(1 AS BIGNUMERIC)   UNION ALL
SELECT CAST(8 as int64)          , CAST(0 AS BIGNUMERIC)     , CAST(NULL AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[
  {1, 2, 4},
  {2, 1, -2},
  {3, 0, 2},
  {4, 2, 0},
  {5, 0, 1},
  {6, 0, NULL},
  {7, NULL, 1},
  {8, 0, NULL}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericBigValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS BIGNUMERIC)              as x, CAST(9.9999999e+37 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(-9.9999999e+37 AS BIGNUMERIC)     , CAST(0 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[
  {
    1,
    0,
    99999999000000000000000000000000000000
  },
  {
    2,
    -99999999000000000000000000000000000000,
    0
  }
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericSmallValuesBinaryStat AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS BIGNUMERIC)     as x, CAST(1e-29 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(-1e-29 AS BIGNUMERIC)     , CAST(0 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[
  {
    1,
    0,
    0.00000000000000000000000000001
  },
  {
    2,
    -0.00000000000000000000000000001,
    0
  }
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericZeroCorrelation AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS BIGNUMERIC) as x, CAST(0 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64) as row_id, CAST(1 AS BIGNUMERIC) as x, CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(3 as int64) as row_id, CAST(2 AS BIGNUMERIC) as x, CAST(0 AS BIGNUMERIC)      UNION ALL
SELECT CAST(4 as int64) as row_id, CAST(3 AS BIGNUMERIC) as x, CAST(2 AS BIGNUMERIC)      UNION ALL
SELECT CAST(5 as int64)          , CAST(4 AS BIGNUMERIC)     , CAST(0 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[
  {1, 0, 0},
  {2, 1, 2},
  {3, 2, 0},
  {4, 3, 2},
  {5, 4, 0}
]
==

[required_features=BIGNUMERIC_TYPE]
[prepare_database]
CREATE TABLE TableBigNumericNanCorrelation AS
SELECT CAST(1 as int64) as row_id, CAST(0 AS BIGNUMERIC) as x, CAST(2 AS BIGNUMERIC) as y UNION ALL
SELECT CAST(2 as int64)          , CAST(1 AS BIGNUMERIC)     , CAST(2 AS BIGNUMERIC)
--
ARRAY<STRUCT<row_id INT64, x BIGNUMERIC, y BIGNUMERIC>>[{1, 0, 2}, {2, 1, 2}]
==

[name=stddev_samp_empty_input]
SELECT STDDEV_SAMP(x) FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_one_value]
SELECT STDDEV_SAMP(x) FROM TableOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_one_non_null_value]
SELECT STDDEV_SAMP(x) FROM TableOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_nulls]
SELECT STDDEV_SAMP(x) FROM TableNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_same_values]
SELECT STDDEV_SAMP(x) FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=stddev_samp_same_distance_from_avg]
SELECT STDDEV_SAMP(x) FROM UNNEST([10, 14, 18]) x
--
ARRAY<STRUCT<DOUBLE>>[{4}]
==

[name=stddev_samp_positive_inf]
SELECT STDDEV_SAMP(CAST('inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_samp_negative_inf]
SELECT STDDEV_SAMP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_samp_nan]
SELECT STDDEV_SAMP(CAST('nan' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_samp_single_row_positive_inf]
SELECT STDDEV_SAMP(CAST('inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_single_row_negative_inf]
SELECT STDDEV_SAMP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_samp_single_row_nan]
SELECT STDDEV_SAMP(CAST('nan' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_empty_input]
SELECT STDDEV_SAMP(x) FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_one_value]
SELECT STDDEV_SAMP(x) FROM TableNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_one_non_null_value]
SELECT STDDEV_SAMP(x) FROM TableNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_nulls]
SELECT STDDEV_SAMP(x) FROM TableNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_same_values]
SELECT STDDEV_SAMP(x) FROM TableNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_different_values]
SELECT STDDEV_SAMP(x) FROM TableNumericAllValuesStddevSamp
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_samp_numeric_high_prec_values]
SELECT STDDEV_SAMP(x) FROM TableNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{0.070710678118654752}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_empty_input]
SELECT STDDEV_SAMP(x) FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_one_value]
SELECT STDDEV_SAMP(x) FROM TableBigNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_one_non_null_value]
SELECT STDDEV_SAMP(x) FROM TableBigNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_nulls]
SELECT STDDEV_SAMP(x) FROM TableBigNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_same_values]
SELECT STDDEV_SAMP(x) FROM TableBigNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_different_values]
SELECT STDDEV_SAMP(x) FROM TableBigNumericAllValuesStddevSamp
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_samp_bignumeric_high_prec_values]
SELECT STDDEV_SAMP(x) FROM TableBigNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{6.3639610306789269e-17}]
==

[name=stddev_pop_empty_input]
SELECT STDDEV_POP(x) FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_pop_one_value]
SELECT STDDEV_POP(x) FROM TableOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=stddev_pop_one_non_null_value]
SELECT STDDEV_POP(x) FROM TableOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=stddev_pop_nulls]
SELECT STDDEV_POP(x) FROM TableNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=stddev_pop_same_values]
SELECT STDDEV_POP(x) FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=stddev_pop_nice]
SELECT STDDEV_POP(x) FROM UNNEST([1, 9]) x
--
ARRAY<STRUCT<DOUBLE>>[{4}]
==

[name=stddev_pop_positive_inf]
SELECT STDDEV_POP(CAST('inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_pop_negative_inf]
SELECT STDDEV_POP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_pop_nan]
SELECT STDDEV_POP(CAST('nan' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_pop_single_row_positive_inf]
SELECT STDDEV_POP(CAST('inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_pop_single_row_negative_inf]
SELECT STDDEV_POP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=stddev_pop_single_row_nan]
SELECT STDDEV_POP(CAST('nan' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_empty_input]
SELECT STDDEV_POP(x) FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_one_value]
SELECT STDDEV_POP(x) FROM TableNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_one_non_null_value]
SELECT STDDEV_POP(x) FROM TableNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_nulls]
SELECT STDDEV_POP(x) FROM TableNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_same_values]
SELECT STDDEV_POP(x) FROM TableNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_different_values]
SELECT STDDEV_POP(x) FROM TableNumericAllValuesStddevPop
--
ARRAY<STRUCT<DOUBLE>>[{2}]
==

[required_features=NUMERIC_TYPE]
[name=stddev_pop_numeric_high_prec_values]
SELECT STDDEV_POP(x) FROM TableNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{0.05}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_empty_input]
SELECT STDDEV_POP(x) FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_one_value]
SELECT STDDEV_POP(x) FROM TableBigNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_one_non_null_value]
SELECT STDDEV_POP(x) FROM TableBigNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_nulls]
SELECT STDDEV_POP(x) FROM TableBigNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_same_values]
SELECT STDDEV_POP(x) FROM TableBigNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_different_values]
SELECT STDDEV_POP(x) FROM TableBigNumericAllValuesStddevPop
--
ARRAY<STRUCT<DOUBLE>>[{2}]
==

[required_features=BIGNUMERIC_TYPE]
[name=stddev_pop_bignumeric_high_prec_values]
SELECT STDDEV_POP(x) FROM TableBigNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{4.5e-17}]
==

[name=var_samp_empty_input]
SELECT VAR_SAMP(x) FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_one_value]
SELECT VAR_SAMP(x) FROM TableOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_one_non_null_value]
SELECT VAR_SAMP(x) FROM TableOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_nulls]
SELECT VAR_SAMP(x) FROM TableNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_same_values]
SELECT VAR_SAMP(x) FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=var_samp_same_distance_from_avg]
SELECT VAR_SAMP(x) FROM UNNEST([50, 60, 70]) x
--
ARRAY<STRUCT<DOUBLE>>[{100}]
==

[name=var_samp_positive_inf]
SELECT VAR_SAMP(CAST('inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_samp_negative_inf]
SELECT VAR_SAMP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_samp_nan]
SELECT VAR_SAMP(CAST('nan' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_samp_single_row_positive_inf]
SELECT VAR_SAMP(CAST('inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_single_row_negative_inf]
SELECT VAR_SAMP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_samp_single_row_nan]
SELECT VAR_SAMP(CAST('nan' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_empty_input]
SELECT VAR_SAMP(x) FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_one_value]
SELECT VAR_SAMP(x) FROM TableNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_one_non_null_value]
SELECT VAR_SAMP(x) FROM TableNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_nulls]
SELECT VAR_SAMP(x) FROM TableNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_same_values]
SELECT VAR_SAMP(x) FROM TableNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_different_values]
SELECT VAR_SAMP(x) FROM TableNumericAllValuesVar
--
ARRAY<STRUCT<DOUBLE>>[{16.093}]
==

[required_features=NUMERIC_TYPE]
[name=var_samp_numeric_high_prec_values]
SELECT VAR_SAMP(x) FROM TableNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{0.005}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_empty_input]
SELECT VAR_SAMP(x) FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_one_value]
SELECT VAR_SAMP(x) FROM TableBigNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_one_non_null_value]
SELECT VAR_SAMP(x) FROM TableBigNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_nulls]
SELECT VAR_SAMP(x) FROM TableBigNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_same_values]
SELECT VAR_SAMP(x) FROM TableBigNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_different_values]
SELECT VAR_SAMP(x) FROM TableBigNumericAllValuesVar
--
ARRAY<STRUCT<DOUBLE>>[{16.093}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_samp_bignumeric_high_prec_values]
SELECT VAR_SAMP(x) FROM TableBigNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{4.0499999999999994e-33}]
==

[name=var_pop_empty_input]
SELECT VAR_POP(x) FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_pop_one_value]
SELECT VAR_POP(x) FROM TableOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=var_pop_one_non_null_value]
SELECT VAR_POP(x) FROM TableOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=var_pop_nulls]
SELECT VAR_POP(x) FROM TableNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=var_pop_same_values]
SELECT VAR_POP(x) FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[name=var_pop_nice]
SELECT VAR_POP(x) FROM UNNEST([10, 20]) x
--
ARRAY<STRUCT<DOUBLE>>[{25}]
==

[name=var_pop_positive_inf]
SELECT VAR_POP(CAST('inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_pop_negative_inf]
SELECT VAR_POP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_pop_nan]
SELECT VAR_POP(CAST('nan' AS DOUBLE)) FROM UNNEST([1, 2]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_pop_single_row_positive_inf]
SELECT VAR_POP(CAST('inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_pop_single_row_negative_inf]
SELECT VAR_POP(CAST('-inf' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=var_pop_single_row_nan]
SELECT VAR_POP(CAST('nan' AS DOUBLE)) FROM UNNEST([1]) x
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_empty_input]
SELECT VAR_POP(x) FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_one_value]
SELECT VAR_POP(x) FROM TableNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_one_non_null_value]
SELECT VAR_POP(x) FROM TableNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_nulls]
SELECT VAR_POP(x) FROM TableNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_same_values]
SELECT VAR_POP(x) FROM TableNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_different_values]
SELECT VAR_POP(x) FROM TableNumericAllValuesVar
--
ARRAY<STRUCT<DOUBLE>>[{12.8744}]
==

[required_features=NUMERIC_TYPE]
[name=var_pop_numeric_high_prec_values]
SELECT VAR_POP(x) FROM TableNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{0.0025}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_empty_input]
SELECT VAR_POP(x) FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_one_value]
SELECT VAR_POP(x) FROM TableBigNumericOneValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_one_non_null_value]
SELECT VAR_POP(x) FROM TableBigNumericOneNonNullValue
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_nulls]
SELECT VAR_POP(x) FROM TableBigNumericNulls
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_same_values]
SELECT VAR_POP(x) FROM TableBigNumericSameValues
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_different_values]
SELECT VAR_POP(x) FROM TableBigNumericAllValuesVar
--
ARRAY<STRUCT<DOUBLE>>[{12.8744}]
==

[required_features=BIGNUMERIC_TYPE]
[name=var_pop_bignumeric_high_prec_values]
SELECT VAR_POP(x) FROM TableBigNumericHighPrecValues
--
ARRAY<STRUCT<DOUBLE>>[{2.0249999999999997e-33}]
==

[name=var_samp_overflow_error]
SELECT VAR_SAMP(x)
FROM UNNEST([1.0, 2.2e+304,-2.2e+304]) x
--
ERROR: generic::out_of_range: double overflow: -1.1e+304 * -2.2e+304
==

[name=var_pop_overflow_error]
SELECT VAR_POP(x)
FROM UNNEST([1.0, 2.2e+304,-2.2e+304]) x
--
ERROR: generic::out_of_range: double overflow: -1.1e+304 * -2.2e+304
==

[name=stddev_samp_overflow_error]
SELECT STDDEV_SAMP(x)
FROM UNNEST([1.0, 2.2e+304,-2.2e+304]) x
--
ERROR: generic::out_of_range: double overflow: -1.1e+304 * -2.2e+304
==

[name=stddev_pop_overflow_error]
SELECT STDDEV_POP(x)
FROM UNNEST([1.0, 2.2e+304,-2.2e+304]) x
--
ERROR: generic::out_of_range: double overflow: -1.1e+304 * -2.2e+304
==

[name=cross_apply]
select
 id,
 (select as struct
   avg(x),
   stddev(x), stddev_samp(x), stddev_pop(x),
   variance(x), var_pop(x), var_samp(x)
 from t.x x) from
 (
  (select 1 id, [] x)                       union all
  (select 2 id, cast(NULL as array<int64>)) union all
  (select 3 id, [NULL])                     union all
  (select 4 id, [1])                        union all
  (select 5 id, [4, 5])                     union all
  (select 6 id, [NULL, 1, NULL, 9, NULL])
 ) t
order by id;
--
ARRAY<STRUCT<
        id INT64,
        STRUCT<DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>
      >>
[{
   1,
   {NULL, NULL, NULL, NULL, NULL, NULL, NULL}
 },
 {
   2,
   {NULL, NULL, NULL, NULL, NULL, NULL, NULL}
 },
 {
   3,
   {NULL, NULL, NULL, NULL, NULL, NULL, NULL}
 },
 {
   4,
   {1, NULL, NULL, 0, NULL, 0, NULL}
 },
 {
   5,
   {4.5, 0.70710678118654757, 0.70710678118654757, 0.5, 0.5, 0.25, 0.5}
 },
 {
   6,
   {5, 5.6568542494923806, 5.6568542494923806, 4, 32, 16, 32}
 }]
==

[name=covar_empty_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, NULL}]
==

[name=corr_empty_input]
SELECT CORR(y,x)
FROM TableEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_one_pair]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 1.0 AS x)])
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, 0}]
==

[name=corr_one_pair]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 1.0 AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_same_column]
SELECT COVAR_SAMP(row_id,row_id), COVAR_POP(row_id,row_id)
FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{2.5, 2}]
==

[name=corr_same_column]
SELECT CORR(row_id,row_id)
FROM TableSameValues
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[name=covar_with_nulls]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 1.0 AS x),
        (2.0, 2.0),
        (3.0, 3.0),
        (4.0, 4.0),
        (5.0, 5.0),
        (CAST(NULL as DOUBLE), 1000.0),
        (2000, CAST(NULL as DOUBLE)),
        (CAST(NULL as DOUBLE), CAST(NULL as DOUBLE))
])
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{2.5, 2}]
==

[name=corr_with_nulls]
SELECT CORR(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 1.0 AS x),
        (2.0, 2.0),
        (3.0, 3.0),
        (4.0, 4.0),
        (5.0, 5.0),
        (CAST(NULL as DOUBLE), 1000.0),
        (2000, CAST(NULL as DOUBLE)),
        (CAST(NULL as DOUBLE), CAST(NULL as DOUBLE))
])
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[name=covar_samp_positive_inf]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (CAST('inf' AS DOUBLE), 4.0)])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=covar_samp_positive_inf_too_few_args]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('inf' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_pop_positive_inf]
SELECT COVAR_POP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (3.0, CAST('inf' AS DOUBLE))])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_positive_inf]
SELECT CORR(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 2.0 AS x),
        (CAST('inf' AS DOUBLE), CAST('inf' AS DOUBLE))
])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_positive_inf_too_few_args]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('inf' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_samp_negative_inf]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (CAST('-inf' AS DOUBLE), 4.0)])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=covar_samp_negative_inf_too_few_args]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('-inf' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_pop_negative_inf]
SELECT COVAR_POP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (3.0, CAST('-inf' AS DOUBLE))])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_negative_inf]
SELECT CORR(y,x)
FROM UNNEST([
    STRUCT(1.0 AS y, 2.0 AS x),
          (CAST('-inf' AS DOUBLE), CAST('-inf' AS DOUBLE))
])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_negative_inf_too_few_args]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('-inf' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_samp_nan]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (CAST('nan' AS DOUBLE), 4.0)])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=covar_samp_nan_too_few_args]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('nan' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_pop_nan]
SELECT COVAR_POP(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (3.0, CAST('nan' AS DOUBLE))])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_nan]
SELECT CORR(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 2.0 AS x),
        (CAST('nan' AS DOUBLE), CAST('nan' AS DOUBLE))
])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[name=corr_nan_too_few_args]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(1.0 AS y, CAST('nan' AS DOUBLE) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[name=covar_normal_values]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 5.0 AS x),
        (3.0, 9.0),
        (4.0, 7.0),
        (5.0, 1.0),
        (7.0, 13.0)
])
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{4, 3.2}]
==

[name=corr_normal_values]
SELECT CORR(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 5.0 AS x),
        (3.0, 9.0),
        (4.0, 7.0),
        (5.0, 1.0),
        (7.0, 13.0)
])
--
ARRAY<STRUCT<DOUBLE>>[{0.4}]
==

[name=covar_samp_overflow_error]
SELECT COVAR_SAMP(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 1.0 AS x),
        (2.2e+304, -2.2e+304)
])
--
ERROR: generic::out_of_range: double overflow: -2.2e+304 * 2.2e+304
==

[name=covar_pop_overflow_error]
SELECT COVAR_POP(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, 1.0 AS x),
        (2.2e+304, -2.2e+304)
])
--
ERROR: generic::out_of_range: double overflow: -2.2e+304 * 2.2e+304
==

[name=corr_overflow_error]
SELECT CORR(y,x)
FROM UNNEST([
  STRUCT(1.0 AS y, -1.0 AS x),
        (2.2e+154, -2.2e+154)
])
--
ERROR: generic::out_of_range: double overflow: -2.2e+154 * 2.2e+154
==

[name=corr_zero_over_zero]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(1.0 AS y, 2.0 AS x), (1.0, 2.0)])
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_empty_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, NULL}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_empty_input]
SELECT CORR(y,x)
FROM TableNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_one_pair]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM UNNEST([STRUCT(CAST(1.0 AS NUMERIC) AS y, CAST(1.0 AS NUMERIC) AS x)])
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, 0}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_one_pair]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(CAST(1.0 AS NUMERIC) AS y, CAST(1.0 AS NUMERIC) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_same_column]
SELECT COVAR_SAMP(x,x), COVAR_POP(x,x)
FROM TableNumericSameColumn
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{2.5, 2}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_same_column]
SELECT CORR(x,x)
FROM TableNumericSameColumn
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_normal_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableNumericAllValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{1.7545, 1.4036}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_normal_input_with_null]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableNumericAllValuesWithNullBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{0.25, 0.2}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_big_values_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableNumericBigValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[
  {
    4.9999999000000009e+57,
    2.4999999500000005e+57
  }
]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_big_values_input]
SELECT CORR(y,x)
FROM TableNumericBigValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=NUMERIC_TYPE]
[name=covar_numeric_small_values_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableNumericSmallValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{5e-19, 2.5e-19}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_small_values_input]
SELECT CORR(y,x)
FROM TableNumericSmallValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_zero_correlation_input]
SELECT CORR(y,x)
FROM TableNumericZeroCorrelation
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=NUMERIC_TYPE]
[name=corr_numeric_zero_over_zero]
SELECT CORR(y,x)
FROM TableNumericNanCorrelation
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_empty_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_empty_input]
SELECT CORR(y,x)
FROM TableBigNumericEmpty
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_one_pair]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM UNNEST([STRUCT(CAST(1.0 AS BIGNUMERIC) AS y, CAST(1.0 AS BIGNUMERIC) AS x)])
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{NULL, 0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_one_pair]
SELECT CORR(y,x)
FROM UNNEST([STRUCT(CAST(1.0 AS BIGNUMERIC) AS y, CAST(1.0 AS BIGNUMERIC) AS x)])
--
ARRAY<STRUCT<DOUBLE>>[{NULL}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_same_column]
SELECT COVAR_SAMP(x,x), COVAR_POP(x,x)
FROM TableBigNumericSameColumn
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{2.5, 2}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_same_column]
SELECT CORR(x,x)
FROM TableBigNumericSameColumn
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_normal_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableBigNumericAllValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{1.7545, 1.4036}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_normal_input_with_null]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableBigNumericAllValuesWithNullBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{0.25, 0.19999999999999998}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_big_values_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableBigNumericBigValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{4.9999999e+75, 2.49999995e+75}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_big_values_input]
SELECT CORR(y,x)
FROM TableBigNumericBigValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=BIGNUMERIC_TYPE]
[name=covar_bignumeric_small_values_input]
SELECT COVAR_SAMP(y,x), COVAR_POP(y,x)
FROM TableBigNumericSmallValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE, DOUBLE>>[{5e-59, 2.5e-59}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_small_values_input]
SELECT CORR(y,x)
FROM TableBigNumericSmallValuesBinaryStat
--
ARRAY<STRUCT<DOUBLE>>[{1}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_zero_correlation_input]
SELECT CORR(y,x)
FROM TableBigNumericZeroCorrelation
--
ARRAY<STRUCT<DOUBLE>>[{0}]
==

[required_features=BIGNUMERIC_TYPE]
[name=corr_bignumeric_zero_over_zero]
SELECT CORR(y,x)
FROM TableBigNumericNanCorrelation
--
ARRAY<STRUCT<DOUBLE>>[{nan}]
==

# COVAR_SAMP with BIGNUMERIC HAVING MIN regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=covar_samp_bignumeric_having_min]
SELECT
  COVAR_SAMP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MIN a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# COVAR_SAMP with BIGNUMERIC HAVING MAX regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=covar_samp_bignumeric_having_max]
SELECT
  COVAR_SAMP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MAX a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# COVAR_POP with BIGNUMERIC HAVING MIN regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=covar_pop_bignumeric_having_min]
SELECT
  COVAR_POP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MIN a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{0}]
==

# COVAR_POP with BIGNUMERIC HAVING MAX regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=covar_pop_bignumeric_having_max]
SELECT
  COVAR_POP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MAX a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{0}]
==

# CORR with BIGNUMERIC HAVING MIN regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=corr_bignumeric_having_min]
SELECT
  CORR(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MIN a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# CORR with BIGNUMERIC HAVING MAX regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=corr_pop_bignumeric_having_max]
SELECT
  CORR(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC), CAST('8749926988538416617.75583429724016192953596326874503331195' AS BIGNUMERIC)
    HAVING MAX a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# VAR_SAMP with BIGNUMERIC HAVING MIN regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=var_samp_bignumeric_having_min]
SELECT
  VAR_SAMP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC) HAVING MIN a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# VAR_SAMP with BIGNUMERIC HAVING MAX regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=var_samp_bignumeric_having_max]
SELECT
  VAR_SAMP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC) HAVING MAX a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{NULL}]
==

# VAR_POP with BIGNUMERIC HAVING MIN regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=var_pop_bignumeric_having_min]
SELECT
  VAR_POP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC) HAVING MIN a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{0}]
==

# VAR_POP with BIGNUMERIC HAVING MAX regression in random query test. see b/168504879.
[required_features=BIGNUMERIC_TYPE,V_1_1_HAVING_IN_AGGREGATE]
[name=var_pop_bignumeric_having_max]
SELECT
  VAR_POP(CAST('4713206448799736516.72577184194899760761312056340229007059' AS BIGNUMERIC) HAVING MAX a_1) AS a_5
FROM
  UNNEST([-2345949651440631576,7328094592200505331,-8127752158740727339,3440194346519571781,-5047633812032876658,-687866878989264013,2986247173623817684,3064356682196609899,-4504796347206165351,-8056946152990664047,-5911223673602395496,-8948023665546729396,-1177289210605923554,3065520914909516851,-3360006490673737289]) AS a_1
--
ARRAY<STRUCT<a_5 DOUBLE>>[{0}]
