#
# Create tables
#
[load_proto_files=zetasql/testdata/test_schema.proto]
[load_proto_names=zetasql_test__.KitchenSinkPB]
[load_enum_names=zetasql_test__.TestEnum]

[prepare_database]
CREATE TABLE TableDistincts AS
SELECT cast(1 as int64) as primary_key,
       cast(1 as int64) as distinct_1, cast(1 as int64) as distinct_2,
       cast(1 as int64) as distinct_4, cast(1 as int64) as distinct_8,
       cast(1 as int64) as distinct_16, cast(1 as int64) as distinct_2B,
       cast(1 as int64) as distinct_4B UNION ALL
  SELECT 2, 1, 2, 2, 2, 2, 1, 1 UNION ALL
  SELECT 3, 1, 1, 3, 3, 3,  1, 1 UNION ALL
  SELECT 4, 1, 2, 4, 4, 4,  1, 1 UNION ALL
  SELECT 5, 1, 1, 1, 5, 5,  1, 2 UNION ALL
  SELECT 6, 1, 2, 2, 6, 6,  1, 2 UNION ALL
  SELECT 7, 1, 1, 3, 7, 7,  1, 2 UNION ALL
  SELECT 8, 1, 2, 4, 8, 8,  1, 2 UNION ALL
  SELECT 9, 1, 1, 1, 1, 9,  2, 3 UNION ALL
  SELECT 10, 1, 2, 2, 2, 10, 2, 3 UNION ALL
  SELECT 11, 1, 1, 3, 3, 11, 2, 3 UNION ALL
  SELECT 12, 1, 2, 4, 4, 12, 2, 3 UNION ALL
  SELECT 13, 1, 1, 1, 5, 13, 2, 4 UNION ALL
  SELECT 14, 1, 2, 2, 6, 14, 2, 4 UNION ALL
  SELECT 15, 1, 1, 3, 7, 15, 2, 4 UNION ALL
  SELECT 16, 1, 2, 4, 8, 16, 2, 4
--
ARRAY<STRUCT<primary_key INT64,
             distinct_1 INT64,
             distinct_2 INT64,
             distinct_4 INT64,
             distinct_8 INT64,
             distinct_16 INT64,
             distinct_2B INT64,
             distinct_4B INT64>>
[
  {1, 1, 1, 1, 1, 1, 1, 1},
  {2, 1, 2, 2, 2, 2, 1, 1},
  {3, 1, 1, 3, 3, 3, 1, 1},
  {4, 1, 2, 4, 4, 4, 1, 1},
  {5, 1, 1, 1, 5, 5, 1, 2},
  {6, 1, 2, 2, 6, 6, 1, 2},
  {7, 1, 1, 3, 7, 7, 1, 2},
  {8, 1, 2, 4, 8, 8, 1, 2},
  {9, 1, 1, 1, 1, 9, 2, 3},
  {10, 1, 2, 2, 2, 10, 2, 3},
  {11, 1, 1, 3, 3, 11, 2, 3},
  {12, 1, 2, 4, 4, 12, 2, 3},
  {13, 1, 1, 1, 5, 13, 2, 4},
  {14, 1, 2, 2, 6, 14, 2, 4},
  {15, 1, 1, 3, 7, 15, 2, 4},
  {16, 1, 2, 4, 8, 16, 2, 4}
]
==
[prepare_database]
CREATE TABLE TableDistinctsWithNulls AS
SELECT cast(1 as int64) as primary_key,
       cast(NULL as int64) as distinct_1, cast(NULL as int64) as distinct_2,
       cast(NULL as int64) as distinct_4, cast(NULL as int64) as distinct_8,
       cast(NULL as int64) as distinct_16, cast(NULL as int64) as distinct_2B,
       cast(NULL as int64) as distinct_4B UNION ALL
  SELECT 2,  NULL,    2,    2,    2, 2,  NULL, 1 UNION ALL
  SELECT 3,  NULL, NULL,    3,    3, 3,  NULL, 1 UNION ALL
  SELECT 4,  NULL,    2,    4,    4, 4,  NULL, 1 UNION ALL
  SELECT 5,  NULL, NULL, NULL,    5, 5,  NULL, 2 UNION ALL
  SELECT 6,  NULL,    2,    2,    6, 6,  NULL, 2 UNION ALL
  SELECT 7,  NULL, NULL,    3,    7, 7,  NULL, 2 UNION ALL
  SELECT 8,  NULL,    2,    4,    8, 8,  NULL, 2 UNION ALL
  SELECT 9,  NULL, NULL, NULL, NULL, 9,     2, 3 UNION ALL
  SELECT 10, NULL,    2,    2,    2, 10,    2, 3 UNION ALL
  SELECT 11, NULL, NULL,    3,    3, 11,    2, 3 UNION ALL
  SELECT 12, NULL,    2,    4,    4, 12,    2, 3 UNION ALL
  SELECT 13, NULL, NULL, NULL,    5, 13,    2, 4 UNION ALL
  SELECT 14, NULL,    2,    2,    6, 14,    2, 4 UNION ALL
  SELECT 15, NULL, NULL,    3,    7, 15,    2, 4 UNION ALL
  SELECT 18, NULL,    2,    4,    8, 16,    2, 4
--
ARRAY<STRUCT<primary_key INT64,
             distinct_1 INT64,
             distinct_2 INT64,
             distinct_4 INT64,
             distinct_8 INT64,
             distinct_16 INT64,
             distinct_2B INT64,
             distinct_4B INT64>>
[
  {1, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
  {2, NULL, 2, 2, 2, 2, NULL, 1},
  {3, NULL, NULL, 3, 3, 3, NULL, 1},
  {4, NULL, 2, 4, 4, 4, NULL, 1},
  {5, NULL, NULL, NULL, 5, 5, NULL, 2},
  {6, NULL, 2, 2, 6, 6, NULL, 2},
  {7, NULL, NULL, 3, 7, 7, NULL, 2},
  {8, NULL, 2, 4, 8, 8, NULL, 2},
  {9, NULL, NULL, NULL, NULL, 9, 2, 3},
  {10, NULL, 2, 2, 2, 10, 2, 3},
  {11, NULL, NULL, 3, 3, 11, 2, 3},
  {12, NULL, 2, 4, 4, 12, 2, 3},
  {13, NULL, NULL, NULL, 5, 13, 2, 4},
  {14, NULL, 2, 2, 6, 14, 2, 4},
  {15, NULL, NULL, 3, 7, 15, 2, 4},
  {18, NULL, 2, 4, 8, 16, 2, 4}
]
==
[name=simple]
select sum(distinct_4), distinct_2 from TableDistincts
group by distinct_2
having count(*) > 1
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{16, 1}, {24, 2}]
==
[name=with_subquery]
select sum(distinct_4) from TableDistincts
group by distinct_2
having (select count(*) from TableDistincts) > 1
order by 1
--
ARRAY<STRUCT<INT64>>[{16}, {24}]
==
[name=subquery_and_aggregation]
select sum(distinct_4) from TableDistincts
group by distinct_2
having sum(distinct_4) * 2 < (select count(*) from TableDistincts) * 3
order by 1
--
ARRAY<STRUCT<INT64>>[{16}]
==
[name=constants1]
select sum(distinct_4) from TableDistincts
group by distinct_2
having 1 < 2
order by 1
--
ARRAY<STRUCT<INT64>>[{16}, {24}]
==
[name=constants2]
select sum(distinct_4) from TableDistincts
group by distinct_2
having false
--
ARRAY<STRUCT<INT64>>[]
==
[name=same_aggregation]
select sum(distinct_4) from TableDistincts
group by distinct_2
having sum(distinct_4) > 14
--
ARRAY<STRUCT<INT64>>[{24}, {16}]
==
[name=same_aggregation_and_constant]
select sum(distinct_4) from TableDistincts
group by distinct_2
having sum(distinct_4) > 14 and false
--
ARRAY<STRUCT<INT64>>[]
==
[name=same_aggregation_and_constant2]
select sum(distinct_4) from TableDistincts
group by distinct_2
having sum(distinct_4) > 14 and null
--
ARRAY<STRUCT<INT64>>[]
==
[name=same_aggregation_or_constant]
select sum(distinct_4) from TableDistincts
group by distinct_2
having sum(distinct_4) > 14 or null
--
ARRAY<STRUCT<INT64>>[{24}, {16}]
==
[name=aggregation_and_key]
select sum(distinct_4), distinct_2 from TableDistincts
group by distinct_2
having sum(distinct_4) > 14 + distinct_2
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{24, 2}, {16, 1}]
==
[name=key_only]
select sum(distinct_4), distinct_2 from TableDistincts
group by distinct_2
having distinct_2 is null
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[]
==
[name=key_only3]
select sum(distinct_4), distinct_2, distinct_4 from TableDistincts
group by distinct_2, distinct_4
having distinct_2 + 1 is null and distinct_4 is not null
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[]
==
[name=complex_aggregation]
select sum(distinct_8), distinct_2, distinct_4 from TableDistincts
group by distinct_2, distinct_4
having max(distinct_8 + distinct_16 + 5) > 0
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[
  {12, 1, 1},
  {16, 2, 2},
  {20, 1, 3},
  {24, 2, 4}
]
==
[name=complex_aggregation2]
select sum(distinct_8), distinct_2, distinct_4 from TableDistincts
group by distinct_2, distinct_4
having string_agg(cast(distinct_8 as string)) like '%2%'
  and max(cast(distinct_8 as string)) > '0'
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[{16, 2, 2}]
==
[name=complex_aggregation3]
select sum(distinct_8), distinct_2, distinct_4 from TableDistincts
group by distinct_2, distinct_4
having min(distinct cast(distinct_8 as string)) > '4'
  and max(distinct cast(distinct_8 as string)) > '0'
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[]
==
[name=complex_aggregation4]
select sum(distinct_8), distinct_2, distinct_4,
length(string_agg(distinct cast(distinct_8 as string)))
from TableDistincts
group by distinct_2, distinct_4
having string_agg(distinct cast(distinct_8 as string)) like '%,%'
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {12, 1, 1, 3},
  {16, 2, 2, 3},
  {20, 1, 3, 3},
  {24, 2, 4, 3}
]
==
[name=complex_aggregation5]
select sum(distinct_8), distinct_2, distinct_4 from TableDistincts
group by distinct_2, distinct_4
having exists (select * from unnest([distinct_2, distinct_4]) foo)
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[
  {12, 1, 1},
  {16, 2, 2},
  {20, 1, 3},
  {24, 2, 4}
]
==
[name=complex_aggregation6]
select sum(distinct_8), distinct_2, distinct_4,
mod(count(distinct distinct_4), 2)
from TableDistincts
group by distinct_2, distinct_4
having mod(count(distinct distinct_4), 2) = 0
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[]
==
[name=complex_aggregation7]
select sum(distinct_8), distinct_2, distinct_4,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo)
from TableDistincts
group by distinct_2, distinct_4
having (select count(distinct(a))
        from (select distinct_2 a union all select distinct_4) foo) > 0
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {12, 1, 1, 1},
  {16, 2, 2, 1},
  {20, 1, 3, 2},
  {24, 2, 4, 2}
]
==
[name=complex_aggregation8]
select sum(distinct_8), distinct_2, distinct_4,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo)
from TableDistincts
group by distinct_2, distinct_4
having (select count(distinct(a))
        from (select distinct_2 a union all select distinct_4) foo)
        in (select 1 union all select 3)
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {12, 1, 1, 1},
  {16, 2, 2, 1}
]
==
[name=data_with_nulls_and_simple]
select sum(distinct_4), distinct_2 from TableDistinctsWithNulls
group by distinct_2
having count(*) > 1
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{12, NULL}, {24, 2}]
==
[name=data_with_nulls_and_with_subquery]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having (select count(*) from TableDistinctsWithNulls) > 1
--
ARRAY<STRUCT<INT64>>[{24}, {12}]
==
[name=data_with_nulls_and_subquery_and_aggregation]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) < (select count(*) from TableDistinctsWithNulls)
order by 1
--
ARRAY<STRUCT<INT64>>[{12}]
==
[name=data_with_nulls_and_constants1]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having 1 < 2
order by 1
--
ARRAY<STRUCT<INT64>>[{12}, {24}]
==
[name=data_with_nulls_and_constants2]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having false
--
ARRAY<STRUCT<INT64>>[]
==
[name=data_with_nulls_and_same_aggregation]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) > 14
order by 1
--
ARRAY<STRUCT<INT64>>[{24}]
==
[name=data_with_nulls_and_same_aggregation_and_constant]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) > 14 and false
--
ARRAY<STRUCT<INT64>>[]
==
[name=data_with_nulls_and_same_aggregation_and_constant2]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) > 14 and null
--
ARRAY<STRUCT<INT64>>[]
==
[name=data_with_nulls_and_same_aggregation_or_constant]
select sum(distinct_4) from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) > 14 or null
--
ARRAY<STRUCT<INT64>>[{24}]
==
[name=data_with_nulls_and_aggregation_and_key]
select sum(distinct_4), distinct_2 from TableDistinctsWithNulls
group by distinct_2
having sum(distinct_4) > 14 + distinct_2
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{24, 2}]
==
[name=data_with_nulls_and_key_only]
select sum(distinct_4), distinct_2 from TableDistinctsWithNulls
group by distinct_2
having distinct_2 is null
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{12, NULL}]
==
[name=data_with_nulls_and_key_only3]
select sum(distinct_4), distinct_2, distinct_4 from TableDistinctsWithNulls
group by distinct_2, distinct_4
having distinct_2 + 1 is null and distinct_4 is not null
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[{12, NULL, 3}]
==
[name=data_with_nulls_and_complex_aggregation]
select sum(distinct_8), distinct_2, distinct_4 from TableDistinctsWithNulls
group by distinct_2, distinct_4
having max(distinct_8 + distinct_16 + 5) > 0
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[
  {10, NULL, NULL},
  {16, 2, 2},
  {20, NULL, 3},
  {24, 2, 4}
]
==
[name=data_with_nulls_and_complex_aggregation2]
select sum(distinct_8), distinct_2, distinct_4 from TableDistinctsWithNulls
group by distinct_2, distinct_4
having string_agg(cast(distinct_8 as string)) like '%2%'
  and max(cast(distinct_8 as string)) > '0'
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[{16, 2, 2}]
==
[name=data_with_nulls_and_complex_aggregation3]
select sum(distinct_8), distinct_2, distinct_4 from TableDistinctsWithNulls
group by distinct_2, distinct_4
having min(distinct cast(distinct_8 as string)) > '0'
  and max(distinct cast(distinct_8 as string)) > '0'
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[
  {10, NULL, NULL},
  {16, 2, 2},
  {20, NULL, 3},
  {24, 2, 4}
]
==
[name=data_with_nulls_and_complex_aggregation4]
select sum(distinct_8), distinct_2, distinct_4,
length(string_agg(distinct cast(distinct_8 as string)))
from TableDistinctsWithNulls
group by distinct_2, distinct_4
having string_agg(distinct cast(distinct_8 as string)) like '%4%'
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[{24, 2, 4, 3}]
==
[name=data_with_nulls_and_complex_aggregation5]
select sum(distinct_8), distinct_2, distinct_4 from TableDistinctsWithNulls
group by distinct_2, distinct_4
having exists (select * from unnest([distinct_2, distinct_4]) foo)
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64>>[
  {10, NULL, NULL},
  {16, 2, 2},
  {20, NULL, 3},
  {24, 2, 4}
]
==
[name=data_with_nulls_and_complex_aggregation6]
select sum(distinct_8), distinct_2, distinct_4,
mod(count(distinct distinct_4), 2)
from TableDistinctsWithNulls
group by distinct_2, distinct_4
having mod(count(distinct distinct_4), 2) = 0
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {10, NULL, NULL, 0}
]
==
[name=data_with_nulls_and_complex_aggregation7]
select sum(distinct_8), distinct_2, distinct_4,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo)
from TableDistinctsWithNulls
group by distinct_2, distinct_4
having (select count(distinct(a))
        from (select distinct_2 a union all select distinct_4) foo) > 0
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {16, 2, 2, 1},
  {20, NULL, 3, 1},
  {24, 2, 4, 2}
]
==
[name=data_with_nulls_and_complex_aggregation8]
select sum(distinct_8), distinct_2, distinct_4,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo)
from TableDistinctsWithNulls
group by distinct_2, distinct_4
having (select count(distinct(a))
        from (select distinct_2 a union all select distinct_4) foo)
        in (select 1 union all select 3)
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, distinct_4 INT64, INT64>>[
  {16, 2, 2, 1},
  {20, NULL, 3, 1}
]
==
[name=no_group_by]
select sum(distinct_2)
from TableDistincts
having sum(distinct_4) > 1
--
ARRAY<STRUCT<INT64>>[{24}]
==
[name=data_with_nulls_and_no_group_by]
select sum(distinct_2)
from TableDistinctsWithNulls
having sum(distinct_4) > 1
--
ARRAY<STRUCT<INT64>>[{16}]
==
[name=aliased_aggregation_and_key]
select sum(distinct_4) foo1, distinct_2 foo2 from TableDistincts
group by distinct_2
having foo1 > 14 + foo2
--
ARRAY<STRUCT<foo1 INT64, foo2 INT64>>[{24, 2}, {16, 1}]
==
[name=data_with_nulls_and_aliased_aggregation_and_key]
select sum(distinct_4) foo1, distinct_2 foo2 from TableDistinctsWithNulls
group by distinct_2
having foo1 > 14 + foo2
--
ARRAY<STRUCT<foo1 INT64, foo2 INT64>>[{24, 2}]
==
[name=aliased_complex_aggregation7]
select sum(distinct_8), distinct_2 alias2, distinct_4,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo) alias1
from TableDistincts
group by distinct_2, distinct_4
having alias1 > 0 and alias2 > 1
order by 1
--
ARRAY<STRUCT<INT64, alias2 INT64, distinct_4 INT64, alias1 INT64>>[
  {16, 2, 2, 1},
  {24, 2, 4, 2}
]
==
[name=data_with_nulls_and_aliased_complex_aggregation7]
select sum(distinct_8), distinct_2, distinct_4 alias2,
(select count(distinct(a)) from (select distinct_2 a union all
  select distinct_4) foo) alias1
from TableDistinctsWithNulls
group by distinct_2, distinct_4
having alias1 > 0 and alias2 > 2
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64, alias2 INT64, alias1 INT64>>[
  {20, NULL, 3, 1},
  {24, 2, 4, 2}
]
==

[name=countif_simple]
select count(distinct_2), distinct_2 from TableDistincts
group by distinct_2
having countif(distinct_2 > 1) > 1
order by 1
--
ARRAY<STRUCT<INT64, distinct_2 INT64>>[{8, 2}]
