[prepare_database]
CREATE TABLE TestTable AS
SELECT cast(0 as int64) as row_id, cast(null as double) as value UNION ALL
  SELECT 1, cast('inf' as double)                                UNION ALL
  SELECT 2, cast('-inf' as double)                               UNION ALL
  SELECT 3, cast('nan' as double)                                UNION ALL
  SELECT 4, 1.0786158809173895e+308                              UNION ALL
  SELECT 5, -1.0786158809173895e+308                             UNION ALL
  SELECT 6, 4.94065645841247e-324                                UNION ALL
  SELECT 7, 0                                                    UNION ALL
  SELECT 8, -100                                                 UNION ALL
  SELECT 9, -400
--
ARRAY<STRUCT<row_id INT64, value DOUBLE>>[
  {0, NULL},
  {1, inf},
  {2, -inf},
  {3, nan},
  {
    4,
    1.0786158809173895e+308
  },
  {
    5,
    -1.0786158809173895e+308
  },
  {
    6,
    4.94065645841247e-324
  },
  {7, 0},
  {8, -100},
  {9, -400}
]
==

[prepare_database]
CREATE TABLE TestTable2 AS
SELECT cast(0 as int64) as row_id,
       cast(1 as int64) as key,
       cast(null as double) as value    UNION ALL
  SELECT 1, 2,  null                    UNION ALL
  SELECT 2, 2,  13.5                    UNION ALL
  SELECT 3, 2,  null                    UNION ALL
  SELECT 4, 2,  -200                    UNION ALL
  SELECT 5, 2,  null                    UNION ALL
  SELECT 6, 3,  null                    UNION ALL
  SELECT 7, 3,  1.0                     UNION ALL
  SELECT 8, 3,  cast('nan' as double)   UNION ALL
  SELECT 9, 3,  cast('inf' as double)   UNION ALL
  SELECT 10, 4,  cast('-inf' as double) UNION ALL
  SELECT 11, 4,  cast('inf' as double)  UNION ALL
  SELECT 12, 5,  100                    UNION ALL
  SELECT 13, 5,  -200                   UNION ALL
  SELECT 14, 5,  cast('-inf' as double) UNION ALL
  SELECT 15, 5,  70
--
ARRAY<STRUCT<row_id INT64, key INT64, value DOUBLE>>[
  {0, 1, NULL},
  {1, 2, NULL},
  {2, 2, 13.5},
  {3, 2, NULL},
  {4, 2, -200},
  {5, 2, NULL},
  {6, 3, NULL},
  {7, 3, 1},
  {8, 3, nan},
  {9, 3, inf},
  {10, 4, -inf},
  {11, 4, inf},
  {12, 5, 100},
  {13, 5, -200},
  {14, 5, -inf},
  {15, 5, 70}
]

==
[prepare_database]
[required_features=NUMERIC_TYPE]
CREATE TABLE TestNumericTable AS
SELECT 0 as row_id, null as key, cast(null as numeric) as value UNION ALL
  SELECT 1, null, 99999999999999999999999999999.999999999       UNION ALL
  SELECT 2, 0, -99999999999999999999999999999.999999999         UNION ALL
  SELECT 3, 0, -1e-9                                            UNION ALL
  SELECT 4, null, null                                          UNION ALL
  SELECT 5, 0, 0                                                UNION ALL
  SELECT 6, 0, 1                                                UNION ALL
  SELECT 7, 0, -1e-9                                            UNION ALL
  SELECT 8, 0, -10000000000000000000000000000.000000001         UNION ALL
  SELECT 9, null, 99999999999999999999999999999.999999999       UNION ALL
  SELECT 10, null, -99999999999999999999999999999.999999999
--
ARRAY<STRUCT<row_id INT64, key INT64, value NUMERIC>>[
  {0, NULL, NULL},
  {
    1,
    NULL,
    99999999999999999999999999999.999999999
  },
  {
    2,
    0,
    -99999999999999999999999999999.999999999
  },
  {3, 0, -0.000000001},
  {4, NULL, NULL},
  {5, 0, 0},
  {6, 0, 1},
  {7, 0, -0.000000001},
  {
    8,
    0,
    -10000000000000000000000000000.000000001
  },
  {
    9,
    NULL,
    99999999999999999999999999999.999999999
  },
  {
    10,
    NULL,
    -99999999999999999999999999999.999999999
  }
]
==
[prepare_database]
[required_features=BIGNUMERIC_TYPE]
CREATE TABLE TestBigNumericTable AS
SELECT 0 as row_id, null as key, cast(null as bignumeric) as value UNION ALL
  SELECT 1, null, 5e38       UNION ALL
  SELECT 2, 0, -5e38         UNION ALL
  SELECT 3, 0, -1e-38        UNION ALL
  SELECT 4, null, null       UNION ALL
  SELECT 5, 0, 0              UNION ALL
  SELECT 6, 0, 1                   UNION ALL
  SELECT 7, 0, -1e-38                                            UNION ALL
  SELECT 8, 0, -100000000000000000000000000000000000000.00000000000000000000000000000000000001                                            UNION ALL
  SELECT 9, null, 5e38       UNION ALL
  SELECT 10, null, -5e38
--
ARRAY<STRUCT<row_id INT64, key INT64, value BIGNUMERIC>>[
  {0, NULL, NULL},
  {
    1,
    NULL,
    500000000000000000000000000000000000000
  },
  {
    2,
    0,
    -500000000000000000000000000000000000000
  },
  {
    3,
    0,
    -0.00000000000000000000000000000000000001
  },
  {4, NULL, NULL},
  {5, 0, 0},
  {6, 0, 1},
  {
    7,
    0,
    -0.00000000000000000000000000000000000001
  },
  {
    8,
    0,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001
  },
  {
    9,
    NULL,
    500000000000000000000000000000000000000
  },
  {
    10,
    NULL,
    -500000000000000000000000000000000000000
  }
]
==

[default required_features=ANALYTIC_FUNCTIONS]
[name=analytic_percentile_cont]
SELECT value,
       PERCENTILE_CONT(value, -0.0) OVER (),
       PERCENTILE_CONT(value, 0) OVER (),
       PERCENTILE_CONT(value, 0.125) OVER (),
       PERCENTILE_CONT(value, 0.25) OVER (),
       PERCENTILE_CONT(value, 0.375) OVER (),
       PERCENTILE_CONT(value, 0.5) OVER (),
       PERCENTILE_CONT(value, 0.625) OVER (),
       PERCENTILE_CONT(value, 0.75) OVER (),
       PERCENTILE_CONT(value, 0.875) OVER (),
       PERCENTILE_CONT(value, 1) OVER ()
FROM TestTable
--
ARRAY<STRUCT<value DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE>>
[{
   inf,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   nan,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   -1.0786158809173895e+308,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   0,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   -400,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   NULL,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   -inf,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   1.0786158809173895e+308,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   4.94065645841247e-324,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 },
 {
   -100,
   nan,
   nan,
   -inf,
   -1.0786158809173895e+308,
   -400,
   -100,
   0,
   4.94065645841247e-324,
   1.0786158809173895e+308,
   inf
 }]
==

[name=analytic_percentile_cont_interpolation]
SELECT value,
       PERCENTILE_CONT(value, 4.94065645841247e-324) OVER (),
       PERCENTILE_CONT(value, 0.1249999999999999) OVER (),
       PERCENTILE_CONT(value, 0.2499999999999999) OVER (),
       PERCENTILE_CONT(value, 0.3) OVER (),
       PERCENTILE_CONT(value, 0.4375) OVER (),
       PERCENTILE_CONT(value, 0.5625) OVER (),
       PERCENTILE_CONT(value, 0.65) OVER (),
       PERCENTILE_CONT(value, 0.7) OVER (),
       PERCENTILE_CONT(value, 0.8125) OVER (),
       PERCENTILE_CONT(value, 0.8750000000000001) OVER ()
FROM TestTable
--
ARRAY<STRUCT<value DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE,
             DOUBLE>>
[{
   inf,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   nan,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   -1.0786158809173895e+308,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   0,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   -400,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   NULL,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   -inf,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   1.0786158809173895e+308,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   4.94065645841247e-324,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 },
 {
   -100,
   nan,
   nan,
   -inf,
   -6.471695285504338e+307,
   -250,
   -50,
   0,
   4.94065645841247e-324,
   5.3930794045869475e+307,
   inf
 }]
==

[required_features=ANALYTIC_FUNCTIONS,NUMERIC_TYPE]
[name=analytic_percentile_cont_numeric]
SELECT row_id, PERCENTILE_CONT(value, NUMERIC "0") OVER(),
               PERCENTILE_CONT(value, NUMERIC "1e-9") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.125") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.2") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.25") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.3") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.5") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.625") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.699999999") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.7") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.700000001") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.75") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.8") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.875") OVER(),
               PERCENTILE_CONT(value, NUMERIC "0.9") OVER(),
               PERCENTILE_CONT(value, NUMERIC "1") OVER()
FROM TestNumericTable
--
ARRAY<STRUCT<row_id INT64,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC>>
[{
   1,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   3,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   5,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   7,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   9,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   0,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   2,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   4,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   6,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   8,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   10,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -46000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -6000000000000000000000000000.000000001,
   -0.000000001,
   0,
   0.599999992,
   0.6,
   0.600000008,
   1,
   40000000000000000000000000000.6,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 }]
==

[required_features=ANALYTIC_FUNCTIONS,BIGNUMERIC_TYPE]
[name=analytic_percentile_cont_bignumeric]
SELECT row_id, PERCENTILE_CONT(value, BIGNUMERIC "0") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "1e-38") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.125") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.2") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.25") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.3") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.5") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.625") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.69999999999999999999999999999999999999") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.7") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.70000000000000000000000000000000000001") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.75") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.8") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.875") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "0.9") OVER(),
               PERCENTILE_CONT(value, BIGNUMERIC "1") OVER()
FROM TestBigNumericTable
--
ARRAY<STRUCT<row_id INT64,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC>>
[
  {
    1,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    3,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    5,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    7,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    9,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    0,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    2,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    4,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    6,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    8,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    10,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -260000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -60000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.59999999999999999999999999999999999992,
    0.6,
    0.60000000000000000000000000000000000008,
    1,
    200000000000000000000000000000000000000.6,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  }
]
==

[name=analytic_percentile_cont_partition]
SELECT x, y, z, PERCENTILE_CONT(z, 0.5) OVER (PARTITION BY x_id, y_id)
FROM (
  SELECT t1.row_id x_id, t1.value x, t2.row_id y_id, t2.value y,
  t1.value z FROM TestTable t1, TestTable t2
  WHERE t1.row_id <= 5 AND t2.row_id <= 5
  UNION ALL
  SELECT t1.row_id x_id, t1.value x, t2.row_id y_id, t2.value y,
  t2.value z FROM TestTable t1, TestTable t2
  WHERE t1.row_id <= 5 AND t2.row_id <= 5
)
--
ARRAY<STRUCT<x DOUBLE, y DOUBLE, z DOUBLE, DOUBLE>>[
  {NULL, NULL, NULL, NULL},
  {NULL, NULL, NULL, NULL},
  {NULL, inf, inf, inf},
  {NULL, inf, NULL, inf},
  {NULL, -inf, -inf, -inf},
  {NULL, -inf, NULL, -inf},
  {NULL, nan, nan, nan},
  {NULL, nan, NULL, nan},
  {
    NULL,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308
  },
  {
    NULL,
    1.0786158809173895e+308,
    NULL,
    1.0786158809173895e+308
  },
  {
    NULL,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308
  },
  {
    NULL,
    -1.0786158809173895e+308,
    NULL,
    -1.0786158809173895e+308
  },
  {inf, NULL, NULL, inf},
  {inf, NULL, inf, inf},
  {inf, inf, inf, inf},
  {inf, inf, inf, inf},
  {inf, -inf, -inf, nan},
  {inf, -inf, inf, nan},
  {inf, nan, nan, nan},
  {inf, nan, inf, nan},
  {
    inf,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    inf
  },
  {
    inf,
    1.0786158809173895e+308,
    inf,
    inf
  },
  {
    inf,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    inf
  },
  {
    inf,
    -1.0786158809173895e+308,
    inf,
    inf
  },
  {-inf, NULL, NULL, -inf},
  {-inf, NULL, -inf, -inf},
  {-inf, inf, inf, nan},
  {-inf, inf, -inf, nan},
  {-inf, -inf, -inf, -inf},
  {-inf, -inf, -inf, -inf},
  {-inf, nan, nan, nan},
  {-inf, nan, -inf, nan},
  {
    -inf,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    -inf
  },
  {
    -inf,
    1.0786158809173895e+308,
    -inf,
    -inf
  },
  {
    -inf,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -inf
  },
  {
    -inf,
    -1.0786158809173895e+308,
    -inf,
    -inf
  },
  {nan, NULL, NULL, nan},
  {nan, NULL, nan, nan},
  {nan, inf, inf, nan},
  {nan, inf, nan, nan},
  {nan, -inf, -inf, nan},
  {nan, -inf, nan, nan},
  {nan, nan, nan, nan},
  {nan, nan, nan, nan},
  {
    nan,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    nan
  },
  {
    nan,
    1.0786158809173895e+308,
    nan,
    nan
  },
  {
    nan,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    nan
  },
  {
    nan,
    -1.0786158809173895e+308,
    nan,
    nan
  },
  {
    1.0786158809173895e+308,
    NULL,
    NULL,
    1.0786158809173895e+308
  },
  {
    1.0786158809173895e+308,
    NULL,
    1.0786158809173895e+308,
    1.0786158809173895e+308
  },
  {
    1.0786158809173895e+308,
    inf,
    inf,
    inf
  },
  {
    1.0786158809173895e+308,
    inf,
    1.0786158809173895e+308,
    inf
  },
  {
    1.0786158809173895e+308,
    -inf,
    -inf,
    -inf
  },
  {
    1.0786158809173895e+308,
    -inf,
    1.0786158809173895e+308,
    -inf
  },
  {
    1.0786158809173895e+308,
    nan,
    nan,
    nan
  },
  {
    1.0786158809173895e+308,
    nan,
    1.0786158809173895e+308,
    nan
  },
  {
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308
  },
  {
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308
  },
  {
    1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    0
  },
  {
    1.0786158809173895e+308,
    -1.0786158809173895e+308,
    1.0786158809173895e+308,
    0
  },
  {
    -1.0786158809173895e+308,
    NULL,
    NULL,
    -1.0786158809173895e+308
  },
  {
    -1.0786158809173895e+308,
    NULL,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308
  },
  {
    -1.0786158809173895e+308,
    inf,
    inf,
    inf
  },
  {
    -1.0786158809173895e+308,
    inf,
    -1.0786158809173895e+308,
    inf
  },
  {
    -1.0786158809173895e+308,
    -inf,
    -inf,
    -inf
  },
  {
    -1.0786158809173895e+308,
    -inf,
    -1.0786158809173895e+308,
    -inf
  },
  {
    -1.0786158809173895e+308,
    nan,
    nan,
    nan
  },
  {
    -1.0786158809173895e+308,
    nan,
    -1.0786158809173895e+308,
    nan
  },
  {
    -1.0786158809173895e+308,
    1.0786158809173895e+308,
    1.0786158809173895e+308,
    0
  },
  {
    -1.0786158809173895e+308,
    1.0786158809173895e+308,
    -1.0786158809173895e+308,
    0
  },
  {
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308
  },
  {
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308,
    -1.0786158809173895e+308
  }
]
==

[name=analytic_percentile_cont_partition_non_null]
SELECT key, value,
       PERCENTILE_CONT(value, 0) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.375) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.5) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.625) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 1) OVER (PARTITION BY key)
FROM (SELECT 1 value, 1 key UNION ALL
      SELECT 1, 1            UNION ALL
      SELECT 5, 2            UNION ALL
      SELECT 6, 4            UNION ALL
      SELECT 5, 5            UNION ALL
      SELECT 8, 4            UNION ALL
      SELECT 10, 3            UNION ALL
      SELECT 1, 3            UNION ALL
      SELECT 4, 2            UNION ALL
      SELECT 2, 2)
--
ARRAY<STRUCT<key INT64, value INT64, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>>[
  {1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1},
  {2, 2, 2, 3.5, 4, 4.25, 5},
  {2, 5, 2, 3.5, 4, 4.25, 5},
  {2, 4, 2, 3.5, 4, 4.25, 5},
  {3, 10, 1, 4.375, 5.5, 6.625, 10},
  {3, 1, 1, 4.375, 5.5, 6.625, 10},
  {4, 8, 6, 6.75, 7, 7.25, 8},
  {4, 6, 6, 6.75, 7, 7.25, 8},
  {5, 5, 5, 5, 5, 5, 5}
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC]
[name=analytic_percentile_cont_ignore_nulls]
SELECT value,
       PERCENTILE_CONT(value, 0 IGNORE NULLS) OVER (),
       PERCENTILE_CONT(value, 0.125 IGNORE NULLS) OVER (),
       PERCENTILE_CONT(value, 0.5 IGNORE NULLS) OVER (),
       PERCENTILE_CONT(value, 0.75 IGNORE NULLS) OVER (),
       PERCENTILE_CONT(value, 1 IGNORE NULLS) OVER ()
FROM TestTable2
--
ARRAY<STRUCT<value DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>>[
  {NULL, nan, -inf, 1, 85, inf},
  {NULL, nan, -inf, 1, 85, inf},
  {NULL, nan, -inf, 1, 85, inf},
  {1, nan, -inf, 1, 85, inf},
  {inf, nan, -inf, 1, 85, inf},
  {inf, nan, -inf, 1, 85, inf},
  {-200, nan, -inf, 1, 85, inf},
  {70, nan, -inf, 1, 85, inf},
  {NULL, nan, -inf, 1, 85, inf},
  {13.5, nan, -inf, 1, 85, inf},
  {-200, nan, -inf, 1, 85, inf},
  {NULL, nan, -inf, 1, 85, inf},
  {nan, nan, -inf, 1, 85, inf},
  {-inf, nan, -inf, 1, 85, inf},
  {100, nan, -inf, 1, 85, inf},
  {-inf, nan, -inf, 1, 85, inf}
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC]
[name=analytic_percentile_cont_partition_ignore_nulls]
SELECT key, value,
       PERCENTILE_CONT(value, 0 IGNORE NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.375 IGNORE NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.5 IGNORE NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.625 IGNORE NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 1 IGNORE NULLS) OVER (PARTITION BY key)
FROM TestTable2
--
ARRAY<STRUCT<key INT64, value DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>>[
  {1, NULL, NULL, NULL, NULL, NULL, NULL},
  {2, NULL, -200, -119.9375, -93.25, -66.5625, 13.5},
  {2, NULL, -200, -119.9375, -93.25, -66.5625, 13.5},
  {2, -200, -200, -119.9375, -93.25, -66.5625, 13.5},
  {2, 13.5, -200, -119.9375, -93.25, -66.5625, 13.5},
  {2, NULL, -200, -119.9375, -93.25, -66.5625, 13.5},
  {3, nan, nan, nan, 1, inf, inf},
  {3, NULL, nan, nan, 1, inf, inf},
  {3, inf, nan, nan, 1, inf, inf},
  {3, 1, nan, nan, 1, inf, inf},
  {4, inf, -inf, nan, nan, nan, inf},
  {4, -inf, -inf, nan, nan, nan, inf},
  {5, -inf, -inf, -166.25, -65, 36.25, 100},
  {5, 100, -inf, -166.25, -65, 36.25, 100},
  {5, 70, -inf, -166.25, -65, 36.25, 100},
  {5, -200, -inf, -166.25, -65, 36.25, 100}
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC]
[name=analytic_percentile_cont_respect_nulls]
SELECT value,
       PERCENTILE_CONT(value, 0 RESPECT NULLS) OVER (),
       PERCENTILE_CONT(value, 0.125 RESPECT NULLS) OVER (),
       PERCENTILE_CONT(value, 0.5 RESPECT NULLS) OVER (),
       PERCENTILE_CONT(value, 0.75 RESPECT NULLS) OVER (),
       PERCENTILE_CONT(value, 1 RESPECT NULLS) OVER ()
FROM TestTable2
--
ARRAY<STRUCT<value DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>>[
  {NULL, NULL, NULL, -inf, 27.625, inf},
  {NULL, NULL, NULL, -inf, 27.625, inf},
  {NULL, NULL, NULL, -inf, 27.625, inf},
  {1, NULL, NULL, -inf, 27.625, inf},
  {inf, NULL, NULL, -inf, 27.625, inf},
  {inf, NULL, NULL, -inf, 27.625, inf},
  {-200, NULL, NULL, -inf, 27.625, inf},
  {70, NULL, NULL, -inf, 27.625, inf},
  {NULL, NULL, NULL, -inf, 27.625, inf},
  {13.5, NULL, NULL, -inf, 27.625, inf},
  {-200, NULL, NULL, -inf, 27.625, inf},
  {NULL, NULL, NULL, -inf, 27.625, inf},
  {nan, NULL, NULL, -inf, 27.625, inf},
  {-inf, NULL, NULL, -inf, 27.625, inf},
  {100, NULL, NULL, -inf, 27.625, inf},
  {-inf, NULL, NULL, -inf, 27.625, inf}
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC]
[name=analytic_percentile_cont_partition_respect_nulls]
SELECT key, value,
       PERCENTILE_CONT(value, 0 RESPECT NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.375 RESPECT NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.5 RESPECT NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 0.625 RESPECT NULLS) OVER (PARTITION BY key),
       PERCENTILE_CONT(value, 1 RESPECT NULLS) OVER (PARTITION BY key)
FROM TestTable2
--
ARRAY<STRUCT<key INT64, value DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE, DOUBLE>>[
  {1, NULL, NULL, NULL, NULL, NULL, NULL},
  {2, NULL, NULL, NULL, NULL, -200, 13.5},
  {2, NULL, NULL, NULL, NULL, -200, 13.5},
  {2, -200, NULL, NULL, NULL, -200, 13.5},
  {2, 13.5, NULL, NULL, NULL, -200, 13.5},
  {2, NULL, NULL, NULL, NULL, -200, 13.5},
  {3, nan, NULL, nan, nan, nan, inf},
  {3, NULL, NULL, nan, nan, nan, inf},
  {3, inf, NULL, nan, nan, nan, inf},
  {3, 1, NULL, nan, nan, nan, inf},
  {4, inf, -inf, nan, nan, nan, inf},
  {4, -inf, -inf, nan, nan, nan, inf},
  {5, -inf, -inf, -166.25, -65, 36.25, 100},
  {5, 100, -inf, -166.25, -65, 36.25, 100},
  {5, 70, -inf, -166.25, -65, 36.25, 100},
  {5, -200, -inf, -166.25, -65, 36.25, 100}
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC,NUMERIC_TYPE]
[name=analytic_percentile_cont_numeric_ignore_nulls]
SELECT key, value,
PERCENTILE_CONT(value, NUMERIC "0" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.1" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.2" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.3" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.4" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.5" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.6" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.7" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.8" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.9" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "1" IGNORE NULLS) OVER(partition by key)
FROM TestNumericTable
--
ARRAY<STRUCT<key INT64,
             value NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC>>
[{
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -59999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -59999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -59999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -59999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -59999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   0,
   0,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -10000000000000000000000000000.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -0.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -0.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   1,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 }]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC,BIGNUMERIC_TYPE]
[name=analytic_percentile_cont_bignumeric_ignore_nulls]
SELECT key, value,
PERCENTILE_CONT(value, BIGNUMERIC "0" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.1" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.2" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.3" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.4" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.5" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.6" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.7" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.8" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.9" IGNORE NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "1" IGNORE NULLS) OVER(partition by key)
FROM TestBigNumericTable
--
ARRAY<STRUCT<key INT64,
             value BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC>>
[
  {
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    0,
    0,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -0.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -0.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    1,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  }
]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC,NUMERIC_TYPE]
[name=analytic_percentile_cont_numeric_respect_nulls]
SELECT key, value,
PERCENTILE_CONT(value, NUMERIC "0" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.1" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.2" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.3" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.4" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.5" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.6" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.7" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.8" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "0.9" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, NUMERIC "1" RESPECT NULLS) OVER(partition by key)
FROM TestNumericTable
--
ARRAY<STRUCT<key INT64,
             value NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC,
             NUMERIC>>
[{
   NULL,
   NULL,
   NULL,
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   NULL,
   NULL,
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   99999999999999999999999999999.999999999,
   NULL,
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   99999999999999999999999999999.999999999,
   NULL,
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   NULL,
   -99999999999999999999999999999.999999999,
   NULL,
   NULL,
   NULL,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -20000000000000000000000000000,
   59999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999,
   99999999999999999999999999999.999999999
 },
 {
   0,
   0,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -10000000000000000000000000000.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -0.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -99999999999999999999999999999.999999999,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   -0.000000001,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 },
 {
   0,
   1,
   -99999999999999999999999999999.999999999,
   -55000000000000000000000000000,
   -10000000000000000000000000000.000000001,
   -5000000000000000000000000000.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   -0.000000001,
   0,
   0.5,
   1
 }]
==

[required_features=ANALYTIC_FUNCTIONS,V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC,BIGNUMERIC_TYPE]
[name=analytic_percentile_cont_bignumeric_respect_nulls]
SELECT key, value,
PERCENTILE_CONT(value, BIGNUMERIC "0" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.1" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.2" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.3" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.4" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.5" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.6" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.7" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.8" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "0.9" RESPECT NULLS) OVER(partition by key),
PERCENTILE_CONT(value, BIGNUMERIC "1" RESPECT NULLS) OVER(partition by key)
FROM TestBigNumericTable
--
ARRAY<STRUCT<key INT64,
             value BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC,
             BIGNUMERIC>>
[
  {
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    500000000000000000000000000000000000000,
    NULL,
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    500000000000000000000000000000000000000,
    NULL,
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    NULL,
    -500000000000000000000000000000000000000,
    NULL,
    NULL,
    NULL,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -100000000000000000000000000000000000000,
    300000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000,
    500000000000000000000000000000000000000
  },
  {
    0,
    0,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -0.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -500000000000000000000000000000000000000,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    -0.00000000000000000000000000000000000001,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  },
  {
    0,
    1,
    -500000000000000000000000000000000000000,
    -300000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -100000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -50000000000000000000000000000000000000.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    -0.00000000000000000000000000000000000001,
    0,
    0.5,
    1
  }
]
