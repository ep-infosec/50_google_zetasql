#
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# proto-file: zetasql/compliance/known_error.proto
# proto-message: KnownErrorFile

# Known errors file for zetasql compliance framework. Add labels and queries
# here to exclude them from compliance tests.

contact_email: "matthewbr@google.com"

known_errors {
  mode: ALLOW_ERROR
  reason: "base32 not yet open source b/171902145"
  label: ".*:to_base32.*"
  label: ".*from_base32.*"
  label: "code:.*safe_to_base32.*"
  label: "code:.*safe_from_base32.*"
  label: "cast_function_test:cast_bytes_to_string_base32"
  label: "cast_function_test:cast_string_to_bytes_base32"
}
known_errors {
  reason: "Approximate Aggregation not yet open source (b/174484679)"
  # Approximate Aggregation
  label: ".*hll.*"
  label: ".*kll.*"
  label: ".*approx.*"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_quantiles_explicit_bounds"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_quantiles_explicit_bounds_2"
}
known_errors {
  reason: "Security functions not yet open source (b/174485292)"
  # Security
  label: ".*session_user.*"
  label: ".*keys_test.*"
  label: ".*aead.*"
}
known_errors {
  reason: "Geography support not yet open source (b/174487425)"
  # Geography
  label: ".*geography.*"
  label: "pivot_test:pivot_st_nearest_neighbors"
}
known_errors {
  reason: "UUID support not yet open source (b/174486477)"
  # UUID
  label: ".*uuid.*"
}
known_errors {
  reason: "Named Extension support not yet open source (b/174488632)"
  # Proto Named Extensions
  label: "replace_fields_test:replace_fields_proto_named_extension"
}
known_errors {
  mode: ALLOW_ERROR_OR_WRONG_ANSWER
  reason: "FLOAT rendering differs"
  label: "float_and_double_queries_test:compare_float_nans"
  label: "float_and_double_queries_test:distinct_floats_not_zero"
  label: "float_and_double_queries_test:functions_inf"
  label: "float_and_double_queries_test:functions_nans"
  label: "float_and_double_queries_test:group_by_float"
  label: "float_and_double_queries_test:in_with_base"
  label: "float_and_double_queries_test:in_with_infinity"
  label: "float_and_double_queries_test:in_with_nan"
  label: "float_and_double_queries_test:in_with_zero"
  label: "float_and_double_queries_test:inner_join_float"
  label: "float_and_double_queries_test:not_equal_float_nans"
  label: "float_and_double_queries_test:order_floats"
  label: "float_and_double_queries_test:order_floats_desc"
  label: "array_aggregation_test:array_concat_agg_float"
  label: "except_intersect_queries_test:except_all_multiple_cols_float"
  label: "except_intersect_queries_test:except_distinct_multiple_cols_float"
  label: "except_intersect_queries_test:intersect_all_multiple_cols_float"
  label: "except_intersect_queries_test:intersect_distinct_multiple_cols_float"
}
known_errors {
  mode: ALLOW_ERROR_OR_WRONG_ANSWER
  reason: "Unknown reasons"
  label: "analytic_partitionby_orderby_test:orderby_collate_unknown"
  label: "array_constructors_test:select_proto_array_all_null"
  label: "dml_update_struct_test:assign_proto_struct_field"
  label: "dml_update_struct_test:assign_proto_struct_field_default"
  label: "dml_update_struct_test:assign_proto_struct_field_null"
  label: "dml_update_struct_test:assign_proto_subfield_in_struct"
  label: "enum_queries_test:enum_value_desc_multiple_annotations"
  label: "enum_queries_test:enum_value_desc_proto"
  label: "except_intersect_queries_test:except_all_datatype_enum"
  label: "union_distinct_queries_test:union_distinct_datatype_enum"
  label: "unionall_queries_test:unionall_datatype_enum"
}
known_errors {
  mode: ALLOW_ERROR
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_explicit_bounds"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_implicit_bounds"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_with_null_epsilon"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_implicit_bounds_with_params"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_percentile_cont_implicit_bounds"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_percentile_cont_implicit_bounds_2"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_explicit_bounds_with_delta"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_implicit_bounds_with_delta"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_with_null_epsilon_with_delta"
  label: "anonymization_test:anonymization_basic_anon_percentile_cont_implicit_bounds_with_params_with_delta"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_percentile_cont_implicit_bounds_with_delta"
  label: "anonymization_test:anonymization_verify_non_randomness_of_anon_percentile_cont_implicit_bounds_2_with_delta"
}
known_errors {
  mode: ALLOW_ERROR
  reason: "ERROR: generic::invalid_argument: Unsupported built-in function: $anon_[FUNCTION]_with_report_proto/json"
  label: "anonymization_test:anonymization_anon_sum_double_explicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_sum_double_explicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_basic_anon_sum_int64_implicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_basic_anon_sum_int64_implicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_count_double_explicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_count_double_explicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_basic_anon_count_int64_implicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_basic_anon_count_int64_implicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_count_star_explicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_anon_sum_double_explicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_sum_double_explicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_basic_anon_sum_int64_implicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_basic_anon_sum_int64_implicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_count_double_explicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_count_double_explicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_basic_anon_count_int64_implicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_basic_anon_count_int64_implicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_count_star_explicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_anon_quantiles_double_explicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_anon_quantiles_int64_explicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_anon_quantiles_double_implicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_anon_quantiles_int64_implicit_bounds_multi_user_with_report_proto"
  label: "anonymization_test:anonymization_anon_quantiles_double_explicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_int64_explicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_double_implicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_int64_implicit_bounds_multi_user_with_report_proto_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_double_explicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_anon_quantiles_int64_explicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_anon_quantiles_double_implicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_anon_quantiles_int64_implicit_bounds_multi_user_with_report_json"
  label: "anonymization_test:anonymization_anon_quantiles_double_explicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_int64_explicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_double_implicit_bounds_multi_user_with_report_json_zero_rows"
  label: "anonymization_test:anonymization_anon_quantiles_int64_implicit_bounds_multi_user_with_report_json_zero_rows"
}
known_errors {
  mode: ALLOW_UNIMPLEMENTED
  label: "d3a_count_test:.*"
}
known_errors {
  mode: ALLOW_ERROR
  reason: "Unknown reasons"
  label: "concat_function_test:concat_proto"
  label: "timestamp_test:string_parameter_interval_invalid"
  label: "civil_time_types_and_functions:time_constructor"
}

known_errors {
  mode: ALLOW_ERROR_OR_WRONG_ANSWER
  reason: "util/time not yet open source"
  label: "code:format_date.*%J.*"
  label: "code:format_timestamp.*%J.*"
  label: "code:parse_date.*%J.*"
  label: "code:parse_date.*%G.*"
  label: "code:parse_date.*%V.*"
  label: "code:parse_date.*%a.*"
  label: "code:parse_date.*%A.*"
  label: "code:parse_date.*%w.*"
  label: "code:parse_date.*%u.*"
  label: "code:parse_timestamp.*%J.*"
  label: "code:parse_timestamp.*%G.*"
  label: "code:parse_timestamp.*%V.*"
  label: "code:parse_timestamp.*%a.*"
  label: "code:parse_timestamp.*%A.*"
  label: "code:parse_timestamp.*%w.*"
  label: "code:parse_timestamp.*%u.*"
}

known_errors {
  mode: ALLOW_UNIMPLEMENTED
  reason: "Unsupported query shape: A struct value cannot be returned as a column value."
  label: "regression_test:b/228574862_1"
  label: "regression_test:b/228574862_2"
}

known_errors {
  mode: ALLOW_UNIMPLEMENTED
  label: "range_constructors_test:.*"
}
