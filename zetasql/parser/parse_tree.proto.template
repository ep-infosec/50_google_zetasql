//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package zetasql;
option java_package = "com.google.zetasql.parser";
option java_multiple_files = true;

import "zetasql/parser/ast_enums.proto";
import "zetasql/public/parse_location_range.proto";
import "zetasql/public/type.proto";

// clang-format off

// AnyASTNodeProto holds one of the direct subclasses of ASTNode
message AnyASTNodeProto {
  oneof node {
# for tag_id, root_child_node in root_child_nodes|dictsort
    {{root_child_node.proto_field_type}} {{root_child_node.member_name}}_node = {{root_child_node.tag_id}};
# endfor
  }
}

message ASTNodeProto {
  optional ParseLocationRangeProto parse_location_range = 1;
}

// Each class ASTFoo has a corresponding proto message ASTFooProto.
// If ASTFoo is abstract, it additionally has a message AnyASTFooProto.
# for node in nodes
{{blank_line}}
# if node.comment
{{node.comment}}
 # endif
 # if node.is_abstract
message {{node.proto_field_type}} {
  oneof node {
    # for tag_id, subclass in node.subclasses|dictsort
    {{subclass.proto_field_type}} {{subclass.member_name}}_node = {{subclass.tag_id}};
    # endfor
  }
}
 # endif
message {{node.proto_type}} {
  optional {{node.parent_proto_type}} parent = 1;
 # for field in node.fields|sort_by_tag_id
  # if field.comment
{{field.comment}}
  # endif
  {{field.proto_optional_or_repeated}} {{field.proto_type}} {{field.name}} = {{field.tag_id}};
 # endfor

}
# endfor

// clang-format on
