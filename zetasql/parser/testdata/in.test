select 'a' IN ('a', 'b', 'c')
--
QueryStatement [0-29] [select 'a' IN ('a', 'b', 'c')]
  Query [0-29] [select 'a' IN ('a', 'b', 'c')]
    Select [0-29] [select 'a' IN ('a', 'b', 'c')]
      SelectList [7-29] ['a' IN ('a', 'b', 'c')]
        SelectColumn [7-29] ['a' IN ('a', 'b', 'c')]
          InExpression(IN) [7-29] ['a' IN ('a', 'b', 'c')]
            StringLiteral('a') [7-10] ['a']
            Location [11-13] [IN]
            InList [15-28] ['a', 'b', 'c']
              StringLiteral('a') [15-18] ['a']
              StringLiteral('b') [20-23] ['b']
              StringLiteral('c') [25-28] ['c']
--
SELECT
  'a' IN ('a', 'b', 'c')
==

select true IN ('a')
--
QueryStatement [0-20] [select true IN ('a')]
  Query [0-20] [select true IN ('a')]
    Select [0-20] [select true IN ('a')]
      SelectList [7-20] [true IN ('a')]
        SelectColumn [7-20] [true IN ('a')]
          InExpression(IN) [7-20] [true IN ('a')]
            BooleanLiteral(true) [7-11] [true]
            Location [12-14] [IN]
            InList [16-19] ['a']
              StringLiteral('a') [16-19] ['a']
--
SELECT
  true IN ('a')
==

select a IN ()
--
ERROR: Syntax error: Unexpected ")" [at 1:14]
select a IN ()
             ^
==

select a LIKE b IN (a, b, c)
--
ERROR: Syntax error: Unexpected keyword IN [at 1:17]
select a LIKE b IN (a, b, c)
                ^
==

select 5 IN ('a', 4 + 5, f(b.a))
--
QueryStatement [0-32] [select 5 IN...5, f(b.a))]
  Query [0-32] [select 5 IN...5, f(b.a))]
    Select [0-32] [select 5 IN...5, f(b.a))]
      SelectList [7-32] [5 IN ('a', 4 + 5, f(b.a))]
        SelectColumn [7-32] [5 IN ('a', 4 + 5, f(b.a))]
          InExpression(IN) [7-32] [5 IN ('a', 4 + 5, f(b.a))]
            IntLiteral(5) [7-8] [5]
            Location [9-11] [IN]
            InList [13-31] ['a', 4 + 5, f(b.a)]
              StringLiteral('a') [13-16] ['a']
              BinaryExpression(+) [18-23] [4 + 5]
                IntLiteral(4) [18-19] [4]
                IntLiteral(5) [22-23] [5]
              FunctionCall [25-31] [f(b.a)]
                PathExpression [25-26] [f]
                  Identifier(f) [25-26] [f]
                PathExpression [27-30] [b.a]
                  Identifier(b) [27-28] [b]
                  Identifier(a) [29-30] [a]
--
SELECT
  5 IN ('a', 4 + 5, f(b.a))
==

select a IN a, b, c
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got identifier "a" [at 1:13]
select a IN a, b, c
            ^
==

select a NOT IN (a, f(b), c.d, (a[b.c]).d)
--
QueryStatement [0-42] [select a NOT...a[b.c]).d)]
  Query [0-42] [select a NOT...a[b.c]).d)]
    Select [0-42] [select a NOT...a[b.c]).d)]
      SelectList [7-42] [a NOT IN (...a[b.c]).d)]
        SelectColumn [7-42] [a NOT IN (...a[b.c]).d)]
          InExpression(NOT IN) [7-42] [a NOT IN (...a[b.c]).d)]
            PathExpression [7-8] [a]
              Identifier(a) [7-8] [a]
            Location [13-15] [IN]
            InList [17-41] [a, f(b), c.d, (a[b.c]).d]
              PathExpression [17-18] [a]
                Identifier(a) [17-18] [a]
              FunctionCall [20-24] [f(b)]
                PathExpression [20-21] [f]
                  Identifier(f) [20-21] [f]
                PathExpression [22-23] [b]
                  Identifier(b) [22-23] [b]
              PathExpression [26-29] [c.d]
                Identifier(c) [26-27] [c]
                Identifier(d) [28-29] [d]
              DotIdentifier [31-41] [(a[b.c]).d]
                ArrayElement [32-38] [a[b.c]]
                  PathExpression [32-33] [a]
                    Identifier(a) [32-33] [a]
                  Location [33-34] [[]
                  PathExpression [34-37] [b.c]
                    Identifier(b) [34-35] [b]
                    Identifier(c) [36-37] [c]
                Identifier(d) [40-41] [d]
--
SELECT
  a NOT IN (a, f(b), c.d, (a[b.c]).d)
==

select a IN NOT (a, b, c)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword NOT [at 1:13]
select a IN NOT (a, b, c)
            ^
==

select a IN NOT LIKE b
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword NOT [at 1:13]
select a IN NOT LIKE b
            ^
==

select col IN ('a') AND col NOT BETWEEN x + y AND f(x,y)
--
QueryStatement [0-56] [select col...AND f(x,y)]
  Query [0-56] [select col...AND f(x,y)]
    Select [0-56] [select col...AND f(x,y)]
      SelectList [7-56] [col IN ('a...AND f(x,y)]
        SelectColumn [7-56] [col IN ('a...AND f(x,y)]
          AndExpr [7-56] [col IN ('a...AND f(x,y)]
            InExpression(IN) [7-19] [col IN ('a')]
              PathExpression [7-10] [col]
                Identifier(col) [7-10] [col]
              Location [11-13] [IN]
              InList [15-18] ['a']
                StringLiteral('a') [15-18] ['a']
            BetweenExpression(NOT BETWEEN) [24-56] [col NOT BETWEEN...AND f(x,y)]
              PathExpression [24-27] [col]
                Identifier(col) [24-27] [col]
              Location [32-39] [BETWEEN]
              BinaryExpression(+) [40-45] [x + y]
                PathExpression [40-41] [x]
                  Identifier(x) [40-41] [x]
                PathExpression [44-45] [y]
                  Identifier(y) [44-45] [y]
              FunctionCall [50-56] [f(x,y)]
                PathExpression [50-51] [f]
                  Identifier(f) [50-51] [f]
                PathExpression [52-53] [x]
                  Identifier(x) [52-53] [x]
                PathExpression [54-55] [y]
                  Identifier(y) [54-55] [y]
--
SELECT
  col IN ('a') AND col NOT BETWEEN x + y AND f(x, y)
==

select * from T where @Id IN (@ValidIds)
--
QueryStatement [0-40] [select * from...@ValidIds)]
  Query [0-40] [select * from...@ValidIds)]
    Select [0-40] [select * from...@ValidIds)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-15] [from T]
        TablePathExpression [14-15] [T]
          PathExpression [14-15] [T]
            Identifier(T) [14-15] [T]
      WhereClause [16-40] [where @Id IN (@ValidIds)]
        InExpression(IN) [22-40] [@Id IN (@ValidIds)]
          ParameterExpr [22-25] [@Id]
            Identifier(Id) [23-25] [Id]
          Location [26-28] [IN]
          InList [30-39] [@ValidIds]
            ParameterExpr [30-39] [@ValidIds]
              Identifier(ValidIds) [31-39] [ValidIds]
--
SELECT
  *
FROM
  T
WHERE
  @Id IN (@ValidIds)
==

select * from T where @@sysvar1 IN (@@sysvar2)
--
QueryStatement [0-46] [select * from...@@sysvar2)]
  Query [0-46] [select * from...@@sysvar2)]
    Select [0-46] [select * from...@@sysvar2)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-15] [from T]
        TablePathExpression [14-15] [T]
          PathExpression [14-15] [T]
            Identifier(T) [14-15] [T]
      WhereClause [16-46] [where @@sysvar1 IN (@@sysvar2)]
        InExpression(IN) [22-46] [@@sysvar1 IN (@@sysvar2)]
          SystemVariableExpr [22-31] [@@sysvar1]
            PathExpression [24-31] [sysvar1]
              Identifier(sysvar1) [24-31] [sysvar1]
          Location [32-34] [IN]
          InList [36-45] [@@sysvar2]
            SystemVariableExpr [36-45] [@@sysvar2]
              PathExpression [38-45] [sysvar2]
                Identifier(sysvar2) [38-45] [sysvar2]
--
SELECT
  *
FROM
  T
WHERE
  @@sysvar1 IN (@@sysvar2)
==

select 1 IN (select 1)
--
QueryStatement [0-22] [select 1 IN (select 1)]
  Query [0-22] [select 1 IN (select 1)]
    Select [0-22] [select 1 IN (select 1)]
      SelectList [7-22] [1 IN (select 1)]
        SelectColumn [7-22] [1 IN (select 1)]
          InExpression(IN) [7-22] [1 IN (select 1)]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            Query [13-21] [select 1]
              Select [13-21] [select 1]
                SelectList [20-21] [1]
                  SelectColumn [20-21] [1]
                    IntLiteral(1) [20-21] [1]
--
SELECT
  1 IN (
    SELECT
      1
  )
==

select 1 NOT IN (select 1)
--
QueryStatement [0-26] [select 1 NOT IN (select 1)]
  Query [0-26] [select 1 NOT IN (select 1)]
    Select [0-26] [select 1 NOT IN (select 1)]
      SelectList [7-26] [1 NOT IN (select 1)]
        SelectColumn [7-26] [1 NOT IN (select 1)]
          InExpression(NOT IN) [7-26] [1 NOT IN (select 1)]
            IntLiteral(1) [7-8] [1]
            Location [13-15] [IN]
            Query [17-25] [select 1]
              Select [17-25] [select 1]
                SelectList [24-25] [1]
                  SelectColumn [24-25] [1]
                    IntLiteral(1) [24-25] [1]
--
SELECT
  1 NOT IN (
    SELECT
      1
  )
==

select 1 IN ARRAY(select 1)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword ARRAY [at 1:13]
select 1 IN ARRAY(select 1)
            ^
==

select 1 IN EXISTS(select 1)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword EXISTS [at 1:13]
select 1 IN EXISTS(select 1)
            ^
==

select true
from T
where (select 1) IN (select (select 1))
--
QueryStatement [0-58] [select true...select 1))]
  Query [0-58] [select true...select 1))]
    Select [0-58] [select true...select 1))]
      SelectList [7-11] [true]
        SelectColumn [7-11] [true]
          BooleanLiteral(true) [7-11] [true]
      FromClause [12-18] [from T]
        TablePathExpression [17-18] [T]
          PathExpression [17-18] [T]
            Identifier(T) [17-18] [T]
      WhereClause [19-58] [where (select...select 1))]
        InExpression(IN) [25-58] [(select 1)...select 1))]
          ExpressionSubquery [25-35] [(select 1)]
            Query [26-34] [select 1]
              Select [26-34] [select 1]
                SelectList [33-34] [1]
                  SelectColumn [33-34] [1]
                    IntLiteral(1) [33-34] [1]
          Location [36-38] [IN]
          Query [40-57] [select (select 1)]
            Select [40-57] [select (select 1)]
              SelectList [47-57] [(select 1)]
                SelectColumn [47-57] [(select 1)]
                  ExpressionSubquery [47-57] [(select 1)]
                    Query [48-56] [select 1]
                      Select [48-56] [select 1]
                        SelectList [55-56] [1]
                          SelectColumn [55-56] [1]
                            IntLiteral(1) [55-56] [1]
--
SELECT
  true
FROM
  T
WHERE
  (
    SELECT
      1
  ) IN (
    SELECT
      (
        SELECT
          1
      )
  )
==

select 1 IN [1, 2, 3]
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got "[" [at 1:13]
select 1 IN [1, 2, 3]
            ^
==

select 1 IN UNNEST([1, 2, 3])
--
QueryStatement [0-29] [select 1 IN UNNEST([1, 2, 3])]
  Query [0-29] [select 1 IN UNNEST([1, 2, 3])]
    Select [0-29] [select 1 IN UNNEST([1, 2, 3])]
      SelectList [7-29] [1 IN UNNEST([1, 2, 3])]
        SelectColumn [7-29] [1 IN UNNEST([1, 2, 3])]
          InExpression(IN) [7-29] [1 IN UNNEST([1, 2, 3])]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            UnnestExpression [12-29] [UNNEST([1, 2, 3])]
              ArrayConstructor [19-28] [[1, 2, 3]]
                IntLiteral(1) [20-21] [1]
                IntLiteral(2) [23-24] [2]
                IntLiteral(3) [26-27] [3]
--
SELECT
  1 IN UNNEST(ARRAY[1, 2, 3])
==

select 1 IN ( (select 1) )
--
QueryStatement [0-26] [select 1 IN ( (select 1) )]
  Query [0-26] [select 1 IN ( (select 1) )]
    Select [0-26] [select 1 IN ( (select 1) )]
      SelectList [7-26] [1 IN ( (select 1) )]
        SelectColumn [7-26] [1 IN ( (select 1) )]
          InExpression(IN) [7-26] [1 IN ( (select 1) )]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            Query [14-24] [(select 1)]
              Query [15-23] [select 1]
                Select [15-23] [select 1]
                  SelectList [22-23] [1]
                    SelectColumn [22-23] [1]
                      IntLiteral(1) [22-23] [1]
--
SELECT
  1 IN ((
    SELECT
      1
    ))
==

select 1 IN ( (select 1) UNION ALL (select 2) )
--
QueryStatement [0-47] [select 1 IN...select 2) )]
  Query [0-47] [select 1 IN...select 2) )]
    Select [0-47] [select 1 IN...select 2) )]
      SelectList [7-47] [1 IN ( (select...select 2) )]
        SelectColumn [7-47] [1 IN ( (select...select 2) )]
          InExpression(IN) [7-47] [1 IN ( (select...select 2) )]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            Query [14-45] [(select 1)...(select 2)]
              SetOperation(UNION ALL) [14-45] [(select 1)...(select 2)]
                Query [15-23] [select 1]
                  Select [15-23] [select 1]
                    SelectList [22-23] [1]
                      SelectColumn [22-23] [1]
                        IntLiteral(1) [22-23] [1]
                Query [36-44] [select 2]
                  Select [36-44] [select 2]
                    SelectList [43-44] [2]
                      SelectColumn [43-44] [2]
                        IntLiteral(2) [43-44] [2]
--
SELECT
  1 IN ((
    SELECT
      1
    ) UNION ALL(
    SELECT
      2
    ))
==

select (select 1, 2) IN ( (select 1, 2) )
--
QueryStatement [0-41] [select (select...elect 1, 2) )]
  Query [0-41] [select (select...elect 1, 2) )]
    Select [0-41] [select (select...elect 1, 2) )]
      SelectList [7-41] [(select 1,...select 1, 2) )]
        SelectColumn [7-41] [(select 1,...select 1, 2) )]
          InExpression(IN) [7-41] [(select 1,...select 1, 2) )]
            ExpressionSubquery [7-20] [(select 1, 2)]
              Query [8-19] [select 1, 2]
                Select [8-19] [select 1, 2]
                  SelectList [15-19] [1, 2]
                    SelectColumn [15-16] [1]
                      IntLiteral(1) [15-16] [1]
                    SelectColumn [18-19] [2]
                      IntLiteral(2) [18-19] [2]
            Location [21-23] [IN]
            Query [26-39] [(select 1, 2)]
              Query [27-38] [select 1, 2]
                Select [27-38] [select 1, 2]
                  SelectList [34-38] [1, 2]
                    SelectColumn [34-35] [1]
                      IntLiteral(1) [34-35] [1]
                    SelectColumn [37-38] [2]
                      IntLiteral(2) [37-38] [2]
--
SELECT
  (
    SELECT
      1,
      2
  ) IN ((
    SELECT
      1,
      2
    ))
==

# This gets disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
select 1 IN ( (select 1), (select 2) )
--
QueryStatement [0-38] [select 1 IN...select 2) )]
  Query [0-38] [select 1 IN...select 2) )]
    Select [0-38] [select 1 IN...select 2) )]
      SelectList [7-38] [1 IN ( (select...select 2) )]
        SelectColumn [7-38] [1 IN ( (select...select 2) )]
          InExpression(IN) [7-38] [1 IN ( (select...select 2) )]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            InList [14-36] [(select 1), (select 2)]
              ExpressionSubquery [14-24] [(select 1)]
                Query [15-23] [select 1]
                  Select [15-23] [select 1]
                    SelectList [22-23] [1]
                      SelectColumn [22-23] [1]
                        IntLiteral(1) [22-23] [1]
              ExpressionSubquery [26-36] [(select 2)]
                Query [27-35] [select 2]
                  Select [27-35] [select 2]
                    SelectList [34-35] [2]
                      SelectColumn [34-35] [2]
                        IntLiteral(2) [34-35] [2]
--
SELECT
  1 IN ((
      SELECT
        1
    ), (
      SELECT
        2
    ))
==

# This gets disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
select 1 IN ( ( (select 1) UNION ALL (select 2) ), (select 3) )
--
QueryStatement [0-63] [select 1 IN...select 3) )]
  Query [0-63] [select 1 IN...select 3) )]
    Select [0-63] [select 1 IN...select 3) )]
      SelectList [7-63] [1 IN ( ( (...select 3) )]
        SelectColumn [7-63] [1 IN ( ( (...select 3) )]
          InExpression(IN) [7-63] [1 IN ( ( (...select 3) )]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            InList [14-61] [( (select...(select 3)]
              ExpressionSubquery [14-49] [( (select...select 2) )]
                Query [16-47] [(select 1)...(select 2)]
                  SetOperation(UNION ALL) [16-47] [(select 1)...(select 2)]
                    Query [17-25] [select 1]
                      Select [17-25] [select 1]
                        SelectList [24-25] [1]
                          SelectColumn [24-25] [1]
                            IntLiteral(1) [24-25] [1]
                    Query [38-46] [select 2]
                      Select [38-46] [select 2]
                        SelectList [45-46] [2]
                          SelectColumn [45-46] [2]
                            IntLiteral(2) [45-46] [2]
              ExpressionSubquery [51-61] [(select 3)]
                Query [52-60] [select 3]
                  Select [52-60] [select 3]
                    SelectList [59-60] [3]
                      SelectColumn [59-60] [3]
                        IntLiteral(3) [59-60] [3]
--
SELECT
  1 IN (((
      SELECT
        1
      ) UNION ALL(
      SELECT
        2
      )), (
      SELECT
        3
    ))
==

# This can't be disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
# Bison does better, pinpointing the exact location of the error.
select 1 IN ( ( (select 1) UNION ALL (select 2 x y z) ), (select 3) )
--
ERROR: Syntax error: Expected ")" but got identifier "y" [at 1:50]
select 1 IN ( ( (select 1) UNION ALL (select 2 x y z) ), (select 3) )
                                                 ^
==

# This shows that the query above does parse in both parsers after fixing the
# syntax error in the second subquery.
select 1 IN ( ( (select 1) UNION ALL (select 2 x) ), (select 3) )
--
QueryStatement [0-65] [select 1 IN...select 3) )]
  Query [0-65] [select 1 IN...select 3) )]
    Select [0-65] [select 1 IN...select 3) )]
      SelectList [7-65] [1 IN ( ( (...select 3) )]
        SelectColumn [7-65] [1 IN ( ( (...select 3) )]
          InExpression(IN) [7-65] [1 IN ( ( (...select 3) )]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            InList [14-63] [( (select...(select 3)]
              ExpressionSubquery [14-51] [( (select...select 2 x) )]
                Query [16-49] [(select 1)...select 2 x)]
                  SetOperation(UNION ALL) [16-49] [(select 1)...select 2 x)]
                    Query [17-25] [select 1]
                      Select [17-25] [select 1]
                        SelectList [24-25] [1]
                          SelectColumn [24-25] [1]
                            IntLiteral(1) [24-25] [1]
                    Query [38-48] [select 2 x]
                      Select [38-48] [select 2 x]
                        SelectList [45-48] [2 x]
                          SelectColumn [45-48] [2 x]
                            IntLiteral(2) [45-46] [2]
                            Alias [47-48] [x]
                              Identifier(x) [47-48] [x]
              ExpressionSubquery [53-63] [(select 3)]
                Query [54-62] [select 3]
                  Select [54-62] [select 3]
                    SelectList [61-62] [3]
                      SelectColumn [61-62] [3]
                        IntLiteral(3) [61-62] [3]
--
SELECT
  1 IN (((
      SELECT
        1
      ) UNION ALL(
      SELECT
        2 AS x
      )), (
      SELECT
        3
    ))
==

select 1 IN ((1)&(2), (1) + (2), 1 < 2, 1 IS TRUE)
--
QueryStatement [0-50] [select 1 IN...1 IS TRUE)]
  Query [0-50] [select 1 IN...1 IS TRUE)]
    Select [0-50] [select 1 IN...1 IS TRUE)]
      SelectList [7-50] [1 IN ((1)&...1 IS TRUE)]
        SelectColumn [7-50] [1 IN ((1)&...1 IS TRUE)]
          InExpression(IN) [7-50] [1 IN ((1)&...1 IS TRUE)]
            IntLiteral(1) [7-8] [1]
            Location [9-11] [IN]
            InList [13-49] [(1)&(2), (...1 IS TRUE]
              BinaryExpression(&) [13-20] [(1)&(2)]
                IntLiteral(1) [14-15] [1]
                IntLiteral(2) [18-19] [2]
              BinaryExpression(+) [22-31] [(1) + (2)]
                IntLiteral(1) [23-24] [1]
                IntLiteral(2) [29-30] [2]
              BinaryExpression(<) [33-38] [1 < 2]
                IntLiteral(1) [33-34] [1]
                IntLiteral(2) [37-38] [2]
              BinaryExpression(IS) [40-49] [1 IS TRUE]
                IntLiteral(1) [40-41] [1]
                BooleanLiteral(TRUE) [45-49] [TRUE]
--
SELECT
  1 IN (1 & 2, 1 + 2, 1 < 2, 1 IS TRUE)
==

select x IN UNNEST()
--
ERROR: Syntax error: Unexpected ")" [at 1:20]
select x IN UNNEST()
                   ^
==

select x NOT IN UNNEST([])
--
QueryStatement [0-26] [select x NOT IN UNNEST([])]
  Query [0-26] [select x NOT IN UNNEST([])]
    Select [0-26] [select x NOT IN UNNEST([])]
      SelectList [7-26] [x NOT IN UNNEST([])]
        SelectColumn [7-26] [x NOT IN UNNEST([])]
          InExpression(NOT IN) [7-26] [x NOT IN UNNEST([])]
            PathExpression [7-8] [x]
              Identifier(x) [7-8] [x]
            Location [13-15] [IN]
            UnnestExpression [16-26] [UNNEST([])]
              ArrayConstructor [23-25] [[]]
--
SELECT
  x NOT IN UNNEST(ARRAY[])
==

select 1 IN UNNEST[1]
--
ERROR: Syntax error: Expected "(" but got "[" [at 1:19]
select 1 IN UNNEST[1]
                  ^
==

select x from T where x IN UNNEST( (select 1) )
--
QueryStatement [0-47] [select x from...select 1) )]
  Query [0-47] [select x from...select 1) )]
    Select [0-47] [select x from...select 1) )]
      SelectList [7-8] [x]
        SelectColumn [7-8] [x]
          PathExpression [7-8] [x]
            Identifier(x) [7-8] [x]
      FromClause [9-15] [from T]
        TablePathExpression [14-15] [T]
          PathExpression [14-15] [T]
            Identifier(T) [14-15] [T]
      WhereClause [16-47] [where x IN...select 1) )]
        InExpression(IN) [22-47] [x IN UNNEST( (select 1) )]
          PathExpression [22-23] [x]
            Identifier(x) [22-23] [x]
          Location [24-26] [IN]
          UnnestExpression [27-47] [UNNEST( (select 1) )]
            ExpressionSubquery [35-45] [(select 1)]
              Query [36-44] [select 1]
                Select [36-44] [select 1]
                  SelectList [43-44] [1]
                    SelectColumn [43-44] [1]
                      IntLiteral(1) [43-44] [1]
--
SELECT
  x
FROM
  T
WHERE
  x IN UNNEST((
    SELECT
      1
  ))
==

# ZetaSQL returns an error message to help the user figure out how to update
# the query in the case of forgotten parentheses for scalar subqueries in
# UNNEST.
select x from T where x IN UNNEST(select 1)
--
ERROR: The argument to UNNEST is an expression, not a query; to use a query as an expression, the query must be wrapped with additional parentheses to make it a scalar subquery expression [at 1:35]
select x from T where x IN UNNEST(select 1)
                                  ^
==

select x IN UNNEST(x + y)
--
QueryStatement [0-25] [select x IN UNNEST(x + y)]
  Query [0-25] [select x IN UNNEST(x + y)]
    Select [0-25] [select x IN UNNEST(x + y)]
      SelectList [7-25] [x IN UNNEST(x + y)]
        SelectColumn [7-25] [x IN UNNEST(x + y)]
          InExpression(IN) [7-25] [x IN UNNEST(x + y)]
            PathExpression [7-8] [x]
              Identifier(x) [7-8] [x]
            Location [9-11] [IN]
            UnnestExpression [12-25] [UNNEST(x + y)]
              BinaryExpression(+) [19-24] [x + y]
                PathExpression [19-20] [x]
                  Identifier(x) [19-20] [x]
                PathExpression [23-24] [y]
                  Identifier(y) [23-24] [y]
--
SELECT
  x IN UNNEST(x + y)
==

select x IN UNNEST(x + y, x)
--
ERROR: Syntax error: Unexpected "," [at 1:25]
select x IN UNNEST(x + y, x)
                        ^
