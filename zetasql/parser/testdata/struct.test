select (1,2,3), ((1,2,3)), (((1,2,3)))
--
QueryStatement [0-38] [select (1,...((1,2,3)))]
  Query [0-38] [select (1,...((1,2,3)))]
    Select [0-38] [select (1,...((1,2,3)))]
      SelectList [7-38] [(1,2,3), (...((1,2,3)))]
        SelectColumn [7-14] [(1,2,3)]
          StructConstructorWithParens [7-14] [(1,2,3)]
            IntLiteral(1) [8-9] [1]
            IntLiteral(2) [10-11] [2]
            IntLiteral(3) [12-13] [3]
        SelectColumn [16-25] [((1,2,3))]
          StructConstructorWithParens [17-24] [(1,2,3)]
            IntLiteral(1) [18-19] [1]
            IntLiteral(2) [20-21] [2]
            IntLiteral(3) [22-23] [3]
        SelectColumn [27-38] [(((1,2,3)))]
          StructConstructorWithParens [29-36] [(1,2,3)]
            IntLiteral(1) [30-31] [1]
            IntLiteral(2) [32-33] [2]
            IntLiteral(3) [34-35] [3]
--
SELECT
  (1, 2, 3),
  (1, 2, 3),
  (1, 2, 3)
==

select (1, 'abc')
--
QueryStatement [0-17] [select (1, 'abc')]
  Query [0-17] [select (1, 'abc')]
    Select [0-17] [select (1, 'abc')]
      SelectList [7-17] [(1, 'abc')]
        SelectColumn [7-17] [(1, 'abc')]
          StructConstructorWithParens [7-17] [(1, 'abc')]
            IntLiteral(1) [8-9] [1]
            StringLiteral('abc') [11-16] ['abc']
--
SELECT
  (1, 'abc')
==

select (key, value)
from KeyValue
--
QueryStatement [0-33] [select (key...from KeyValue]
  Query [0-33] [select (key...from KeyValue]
    Select [0-33] [select (key...from KeyValue]
      SelectList [7-19] [(key, value)]
        SelectColumn [7-19] [(key, value)]
          StructConstructorWithParens [7-19] [(key, value)]
            PathExpression [8-11] [key]
              Identifier(key) [8-11] [key]
            PathExpression [13-18] [value]
              Identifier(value) [13-18] [value]
      FromClause [20-33] [from KeyValue]
        TablePathExpression [25-33] [KeyValue]
          PathExpression [25-33] [KeyValue]
            Identifier(KeyValue) [25-33] [KeyValue]
--
SELECT
  (key, value)
FROM
  KeyValue
==

select ((1, 2), (1, 2))
--
QueryStatement [0-23] [select ((1, 2), (1, 2))]
  Query [0-23] [select ((1, 2), (1, 2))]
    Select [0-23] [select ((1, 2), (1, 2))]
      SelectList [7-23] [((1, 2), (1, 2))]
        SelectColumn [7-23] [((1, 2), (1, 2))]
          StructConstructorWithParens [7-23] [((1, 2), (1, 2))]
            StructConstructorWithParens [8-14] [(1, 2)]
              IntLiteral(1) [9-10] [1]
              IntLiteral(2) [12-13] [2]
            StructConstructorWithParens [16-22] [(1, 2)]
              IntLiteral(1) [17-18] [1]
              IntLiteral(2) [20-21] [2]
--
SELECT
  ((1, 2), (1, 2))
==

select key, value
from KeyValue
where (key, value) in ((1, 'abc'), (2, 'abc'), (key, value))
--
QueryStatement [0-92] [select key...key, value))]
  Query [0-92] [select key...key, value))]
    Select [0-92] [select key...key, value))]
      SelectList [7-17] [key, value]
        SelectColumn [7-10] [key]
          PathExpression [7-10] [key]
            Identifier(key) [7-10] [key]
        SelectColumn [12-17] [value]
          PathExpression [12-17] [value]
            Identifier(value) [12-17] [value]
      FromClause [18-31] [from KeyValue]
        TablePathExpression [23-31] [KeyValue]
          PathExpression [23-31] [KeyValue]
            Identifier(KeyValue) [23-31] [KeyValue]
      WhereClause [32-92] [where (key...key, value))]
        InExpression(IN) [38-92] [(key, value...key, value))]
          StructConstructorWithParens [38-50] [(key, value)]
            PathExpression [39-42] [key]
              Identifier(key) [39-42] [key]
            PathExpression [44-49] [value]
              Identifier(value) [44-49] [value]
          Location [51-53] [in]
          InList [55-91] [(1, 'abc')...key, value)]
            StructConstructorWithParens [55-65] [(1, 'abc')]
              IntLiteral(1) [56-57] [1]
              StringLiteral('abc') [59-64] ['abc']
            StructConstructorWithParens [67-77] [(2, 'abc')]
              IntLiteral(2) [68-69] [2]
              StringLiteral('abc') [71-76] ['abc']
            StructConstructorWithParens [79-91] [(key, value)]
              PathExpression [80-83] [key]
                Identifier(key) [80-83] [key]
              PathExpression [85-90] [value]
                Identifier(value) [85-90] [value]
--
SELECT
  key,
  value
FROM
  KeyValue
WHERE
  (key, value) IN ((1, 'abc'), (2, 'abc'), (key, value))
==

select ((1, 2), ('abc', 'def'))
--
QueryStatement [0-31] [select ((1...', 'def'))]
  Query [0-31] [select ((1...', 'def'))]
    Select [0-31] [select ((1...', 'def'))]
      SelectList [7-31] [((1, 2), ('abc', 'def'))]
        SelectColumn [7-31] [((1, 2), ('abc', 'def'))]
          StructConstructorWithParens [7-31] [((1, 2), ('abc', 'def'))]
            StructConstructorWithParens [8-14] [(1, 2)]
              IntLiteral(1) [9-10] [1]
              IntLiteral(2) [12-13] [2]
            StructConstructorWithParens [16-30] [('abc', 'def')]
              StringLiteral('abc') [17-22] ['abc']
              StringLiteral('def') [24-29] ['def']

--
SELECT
  ((1, 2), ('abc', 'def'))
==

select ((1), (2))
--
QueryStatement [0-17] [select ((1), (2))]
  Query [0-17] [select ((1), (2))]
    Select [0-17] [select ((1), (2))]
      SelectList [7-17] [((1), (2))]
        SelectColumn [7-17] [((1), (2))]
          StructConstructorWithParens [7-17] [((1), (2))]
            IntLiteral(1) [9-10] [1]
            IntLiteral(2) [14-15] [2]
--
SELECT
  (1, 2)
==

select (1, (2), ((3)), (((4))), ((((5)))))
--
QueryStatement [0-42] [select (1,...((((5)))))]
  Query [0-42] [select (1,...((((5)))))]
    Select [0-42] [select (1,...((((5)))))]
      SelectList [7-42] [(1, (2), (...((((5)))))]
        SelectColumn [7-42] [(1, (2), (...((((5)))))]
          StructConstructorWithParens [7-42] [(1, (2), (...((((5)))))]
            IntLiteral(1) [8-9] [1]
            IntLiteral(2) [12-13] [2]
            IntLiteral(3) [18-19] [3]
            IntLiteral(4) [26-27] [4]
            IntLiteral(5) [36-37] [5]
--
SELECT
  (1, 2, 3, 4, 5)
==

select ((1, ((2, (3))), ((((2), ((3)))))))
--
QueryStatement [0-42] [select ((1...((3)))))))]
  Query [0-42] [select ((1...((3)))))))]
    Select [0-42] [select ((1...((3)))))))]
      SelectList [7-42] [((1, ((2,...((3)))))))]
        SelectColumn [7-42] [((1, ((2,...((3)))))))]
          StructConstructorWithParens [8-41] [(1, ((2, (...((3))))))]
            IntLiteral(1) [9-10] [1]
            StructConstructorWithParens [13-21] [(2, (3))]
              IntLiteral(2) [14-15] [2]
              IntLiteral(3) [18-19] [3]
            StructConstructorWithParens [26-38] [((2), ((3)))]
              IntLiteral(2) [28-29] [2]
              IntLiteral(3) [34-35] [3]
--
SELECT
  (1, (2, 3), (2, 3))
==

select (1+2+3, 4+5+6), (fn(a+b), c+d), ((fn1(a+b), fn2(c+d)))
--
QueryStatement [0-61] [select (1+...fn2(c+d)))]
  Query [0-61] [select (1+...fn2(c+d)))]
    Select [0-61] [select (1+...fn2(c+d)))]
      SelectList [7-61] [(1+2+3, 4+...fn2(c+d)))]
        SelectColumn [7-21] [(1+2+3, 4+5+6)]
          StructConstructorWithParens [7-21] [(1+2+3, 4+5+6)]
            BinaryExpression(+) [8-13] [1+2+3]
              BinaryExpression(+) [8-11] [1+2]
                IntLiteral(1) [8-9] [1]
                IntLiteral(2) [10-11] [2]
              IntLiteral(3) [12-13] [3]
            BinaryExpression(+) [15-20] [4+5+6]
              BinaryExpression(+) [15-18] [4+5]
                IntLiteral(4) [15-16] [4]
                IntLiteral(5) [17-18] [5]
              IntLiteral(6) [19-20] [6]
        SelectColumn [23-37] [(fn(a+b), c+d)]
          StructConstructorWithParens [23-37] [(fn(a+b), c+d)]
            FunctionCall [24-31] [fn(a+b)]
              PathExpression [24-26] [fn]
                Identifier(fn) [24-26] [fn]
              BinaryExpression(+) [27-30] [a+b]
                PathExpression [27-28] [a]
                  Identifier(a) [27-28] [a]
                PathExpression [29-30] [b]
                  Identifier(b) [29-30] [b]
            BinaryExpression(+) [33-36] [c+d]
              PathExpression [33-34] [c]
                Identifier(c) [33-34] [c]
              PathExpression [35-36] [d]
                Identifier(d) [35-36] [d]
        SelectColumn [39-61] [((fn1(a+b), fn2(c+d)))]
          StructConstructorWithParens [40-60] [(fn1(a+b), fn2(c+d))]
            FunctionCall [41-49] [fn1(a+b)]
              PathExpression [41-44] [fn1]
                Identifier(fn1) [41-44] [fn1]
              BinaryExpression(+) [45-48] [a+b]
                PathExpression [45-46] [a]
                  Identifier(a) [45-46] [a]
                PathExpression [47-48] [b]
                  Identifier(b) [47-48] [b]
            FunctionCall [51-59] [fn2(c+d)]
              PathExpression [51-54] [fn2]
                Identifier(fn2) [51-54] [fn2]
              BinaryExpression(+) [55-58] [c+d]
                PathExpression [55-56] [c]
                  Identifier(c) [55-56] [c]
                PathExpression [57-58] [d]
                  Identifier(d) [57-58] [d]

--
SELECT
  (1 + 2 + 3, 4 + 5 + 6),
  (fn(a + b), c + d),
  (fn1(a + b), fn2(c + d))
==

select ( (1, 2), (4, 5, 6), ( (7, 8), (9, 10, 11) ) )
--
QueryStatement [0-53] [select ( (...10, 11) ) )]
  Query [0-53] [select ( (...10, 11) ) )]
    Select [0-53] [select ( (...10, 11) ) )]
      SelectList [7-53] [( (1, 2),...10, 11) ) )]
        SelectColumn [7-53] [( (1, 2),...10, 11) ) )]
          StructConstructorWithParens [7-53] [( (1, 2),...10, 11) ) )]
            StructConstructorWithParens [9-15] [(1, 2)]
              IntLiteral(1) [10-11] [1]
              IntLiteral(2) [13-14] [2]
            StructConstructorWithParens [17-26] [(4, 5, 6)]
              IntLiteral(4) [18-19] [4]
              IntLiteral(5) [21-22] [5]
              IntLiteral(6) [24-25] [6]
            StructConstructorWithParens [28-51] [( (7, 8), (9, 10, 11) )]
              StructConstructorWithParens [30-36] [(7, 8)]
                IntLiteral(7) [31-32] [7]
                IntLiteral(8) [34-35] [8]
              StructConstructorWithParens [38-49] [(9, 10, 11)]
                IntLiteral(9) [39-40] [9]
                IntLiteral(10) [42-44] [10]
                IntLiteral(11) [46-48] [11]
--
SELECT
  ((1, 2), (4, 5, 6), ((7, 8), (9, 10, 11)))
==

select [1, (2), (3, 4), (5, 6, 7) ],
       ( [1], [2, 3], [4, 5, 6])
--
QueryStatement [0-69] [select [1,...[4, 5, 6])]
  Query [0-69] [select [1,...[4, 5, 6])]
    Select [0-69] [select [1,...[4, 5, 6])]
      SelectList [7-69] [[1, (2), (...[4, 5, 6])]
        SelectColumn [7-35] [[1, (2), (3, 4), (5, 6, 7) ]]
          ArrayConstructor [7-35] [[1, (2), (3, 4), (5, 6, 7) ]]
            IntLiteral(1) [8-9] [1]
            IntLiteral(2) [12-13] [2]
            StructConstructorWithParens [16-22] [(3, 4)]
              IntLiteral(3) [17-18] [3]
              IntLiteral(4) [20-21] [4]
            StructConstructorWithParens [24-33] [(5, 6, 7)]
              IntLiteral(5) [25-26] [5]
              IntLiteral(6) [28-29] [6]
              IntLiteral(7) [31-32] [7]
        SelectColumn [44-69] [( [1], [2, 3], [4, 5, 6])]
          StructConstructorWithParens [44-69] [( [1], [2, 3], [4, 5, 6])]
            ArrayConstructor [46-49] [[1]]
              IntLiteral(1) [47-48] [1]
            ArrayConstructor [51-57] [[2, 3]]
              IntLiteral(2) [52-53] [2]
              IntLiteral(3) [55-56] [3]
            ArrayConstructor [59-68] [[4, 5, 6]]
              IntLiteral(4) [60-61] [4]
              IntLiteral(5) [63-64] [5]
              IntLiteral(6) [66-67] [6]
--
SELECT
  ARRAY[1, 2, (3, 4), (5, 6, 7)],
  (ARRAY[1], ARRAY[2, 3], ARRAY[4, 5, 6])
==

select [ (1, [ (2, 3), (4, 5) ], ( [6, 7], [8] )) ]
--
QueryStatement [0-51] [select [ (..., [8] )) ]]
  Query [0-51] [select [ (..., [8] )) ]]
    Select [0-51] [select [ (..., [8] )) ]]
      SelectList [7-51] [[ (1, [ (2..., [8] )) ]]
        SelectColumn [7-51] [[ (1, [ (2..., [8] )) ]]
          ArrayConstructor [7-51] [[ (1, [ (2..., [8] )) ]]
            StructConstructorWithParens [9-49] [(1, [ (2,...7], [8] ))]
              IntLiteral(1) [10-11] [1]
              ArrayConstructor [13-31] [[ (2, 3), (4, 5) ]]
                StructConstructorWithParens [15-21] [(2, 3)]
                  IntLiteral(2) [16-17] [2]
                  IntLiteral(3) [19-20] [3]
                StructConstructorWithParens [23-29] [(4, 5)]
                  IntLiteral(4) [24-25] [4]
                  IntLiteral(5) [27-28] [5]
              StructConstructorWithParens [33-48] [( [6, 7], [8] )]
                ArrayConstructor [35-41] [[6, 7]]
                  IntLiteral(6) [36-37] [6]
                  IntLiteral(7) [39-40] [7]
                ArrayConstructor [43-46] [[8]]
                  IntLiteral(8) [44-45] [8]
--
SELECT
  ARRAY[(1, ARRAY[(2, 3), (4, 5)], (ARRAY[6, 7], ARRAY[8]))]
==

select struct(1,2)
--
QueryStatement [0-18] [select struct(1,2)]
  Query [0-18] [select struct(1,2)]
    Select [0-18] [select struct(1,2)]
      SelectList [7-18] [struct(1,2)]
        SelectColumn [7-18] [struct(1,2)]
          StructConstructorWithKeyword [7-18] [struct(1,2)]
            StructConstructorArg [14-15] [1]
              IntLiteral(1) [14-15] [1]
            StructConstructorArg [16-17] [2]
              IntLiteral(2) [16-17] [2]
--
SELECT
  STRUCT(1, 2)
==

select struct<int32, int32>(1,2)
--

QueryStatement [0-32] [select struct...int32>(1,2)]
  Query [0-32] [select struct...int32>(1,2)]
    Select [0-32] [select struct...int32>(1,2)]
      SelectList [7-32] [struct<int32, int32>(1,2)]
        SelectColumn [7-32] [struct<int32, int32>(1,2)]
          StructConstructorWithKeyword [7-32] [struct<int32, int32>(1,2)]
            StructType [7-27] [struct<int32, int32>]
              StructField [14-19] [int32]
                SimpleType [14-19] [int32]
                  PathExpression [14-19] [int32]
                    Identifier(int32) [14-19] [int32]
              StructField [21-26] [int32]
                SimpleType [21-26] [int32]
                  PathExpression [21-26] [int32]
                    Identifier(int32) [21-26] [int32]
            StructConstructorArg [28-29] [1]
              IntLiteral(1) [28-29] [1]
            StructConstructorArg [30-31] [2]
              IntLiteral(2) [30-31] [2]
--
SELECT
  STRUCT< int32, int32 > (1, 2)
==

# STRUCT is a keyword
select (1,2) as struct
--
ERROR: Syntax error: Unexpected keyword STRUCT [at 1:17]
select (1,2) as struct
                ^
==

select struct(), struct<>()
--
QueryStatement [0-27] [select struct(), struct<>()]
  Query [0-27] [select struct(), struct<>()]
    Select [0-27] [select struct(), struct<>()]
      SelectList [7-27] [struct(), struct<>()]
        SelectColumn [7-15] [struct()]
          StructConstructorWithKeyword [7-15] [struct()]
        SelectColumn [17-27] [struct<>()]
          StructConstructorWithKeyword [17-27] [struct<>()]
            StructType [17-25] [struct<>]
--
SELECT
  STRUCT(),
  STRUCT< > ()
==

select struct(1+2 as x)
where struct(a,b,c as d)
--
QueryStatement [0-48] [select struct...,b,c as d)]
  Query [0-48] [select struct...,b,c as d)]
    Select [0-48] [select struct...,b,c as d)]
      SelectList [7-23] [struct(1+2 as x)]
        SelectColumn [7-23] [struct(1+2 as x)]
          StructConstructorWithKeyword [7-23] [struct(1+2 as x)]
            StructConstructorArg [14-22] [1+2 as x]
              BinaryExpression(+) [14-17] [1+2]
                IntLiteral(1) [14-15] [1]
                IntLiteral(2) [16-17] [2]
              Alias [18-22] [as x]
                Identifier(x) [21-22] [x]
      WhereClause [24-48] [where struct(a,b,c as d)]
        StructConstructorWithKeyword [30-48] [struct(a,b,c as d)]
          StructConstructorArg [37-38] [a]
            PathExpression [37-38] [a]
              Identifier(a) [37-38] [a]
          StructConstructorArg [39-40] [b]
            PathExpression [39-40] [b]
              Identifier(b) [39-40] [b]
          StructConstructorArg [41-47] [c as d]
            PathExpression [41-42] [c]
              Identifier(c) [41-42] [c]
            Alias [43-47] [as d]
              Identifier(d) [46-47] [d]
--
SELECT
  STRUCT(1 + 2 AS x)
WHERE
  STRUCT(a, b, c AS d)
==

select struct<int32>(5)
--
QueryStatement [0-23] [select struct<int32>(5)]
  Query [0-23] [select struct<int32>(5)]
    Select [0-23] [select struct<int32>(5)]
      SelectList [7-23] [struct<int32>(5)]
        SelectColumn [7-23] [struct<int32>(5)]
          StructConstructorWithKeyword [7-23] [struct<int32>(5)]
            StructType [7-20] [struct<int32>]
              StructField [14-19] [int32]
                SimpleType [14-19] [int32]
                  PathExpression [14-19] [int32]
                    Identifier(int32) [14-19] [int32]
            StructConstructorArg [21-22] [5]
              IntLiteral(5) [21-22] [5]
--
SELECT
  STRUCT< int32 > (5)
==

select struct<f int32, y string>(x, y as def, 77)
--
QueryStatement [0-49] [select struct...as def, 77)]
  Query [0-49] [select struct...as def, 77)]
    Select [0-49] [select struct...as def, 77)]
      SelectList [7-49] [struct<f int32...as def, 77)]
        SelectColumn [7-49] [struct<f int32...as def, 77)]
          StructConstructorWithKeyword [7-49] [struct<f int32...as def, 77)]
            StructType [7-32] [struct<f int32, y string>]
              StructField [14-21] [f int32]
                Identifier(f) [14-15] [f]
                SimpleType [16-21] [int32]
                  PathExpression [16-21] [int32]
                    Identifier(int32) [16-21] [int32]
              StructField [23-31] [y string]
                Identifier(y) [23-24] [y]
                SimpleType [25-31] [string]
                  PathExpression [25-31] [string]
                    Identifier(string) [25-31] [string]
            StructConstructorArg [33-34] [x]
              PathExpression [33-34] [x]
                Identifier(x) [33-34] [x]
            StructConstructorArg [36-44] [y as def]
              PathExpression [36-37] [y]
                Identifier(y) [36-37] [y]
              Alias [38-44] [as def]
                Identifier(def) [41-44] [def]
            StructConstructorArg [46-48] [77]
              IntLiteral(77) [46-48] [77]
--
SELECT
  STRUCT< f int32, y string > (x, y AS def, 77)
==

select struct<>
--
ERROR: Syntax error: Expected "(" but got end of statement [at 1:16]
select struct<>
               ^
==

# AS is required for aliases inside STRUCT.
select struct(abc def)
--
ERROR: Syntax error: Expected ")" or "," but got identifier "def" [at 1:19]
select struct(abc def)
                  ^
==

# AS aliases are only allowed with the STRUCT keyword.
select (1, 2), (3, 4 AS x)
--
ERROR: Syntax error: Expected ")" or "," but got keyword AS [at 1:22]
select (1, 2), (3, 4 AS x)
                     ^
==

# Parenthesized path expressions are not allowed for aliases inside STRUCT.
select struct(abc AS (foo.bar))
--
ERROR: Syntax error: Unexpected "(" [at 1:22]
select struct(abc AS (foo.bar))
                     ^
==

# Parenthesized path expressions are not allowed for aliases inside STRUCT,
# even when there is no dot.
select struct(abc AS (foo))
--
ERROR: Syntax error: Unexpected "(" [at 1:22]
select struct(abc AS (foo))
                     ^
